# Antennae CircleCI 2.0 configuration
# 
version: 2
jobs:
  build:
    docker:
      - image: docker:stable-git
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: 
          name: Build image
          command: |
            echo "export IMAGE_NAME=$(echo $CIRCLE_PROJECT_REPONAME | tr '[:upper:]' '[:lower:]')" >> $BASH_ENV
            echo 'export DOCKERHUB_IMAGE_NAME=${DOCKER_HUB_USERNAME}/${IMAGE_NAME}' >> $BASH_ENV
            source $BASH_ENV
            docker build --rm -f docker/Dockerfile -t $IMAGE_NAME --build-arg BUILD=$CIRCLE_BUILD_NUM --build-arg METEOR_SETTINGS="$(cat src/tools/settings.json)" .
      - run:
          # tag Docker image for the Dockerhub registry
          name: Tag Dockerhub image
          command: |
            source $BASH_ENV
            docker tag $IMAGE_NAME $DOCKERHUB_IMAGE_NAME:dev
            docker tag $IMAGE_NAME $DOCKERHUB_IMAGE_NAME:$CIRCLE_BUILD_NUM
      - run:
          # authenticate with the Docker Hub registry
          name: Dockerhub login
          command: echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USERNAME --password-stdin
      - run:
          # push the new Docker image to the Docker registry
          name: Dockerhub push
          command: |
            source $BASH_ENV
            docker push $DOCKERHUB_IMAGE_NAME
  deploy:
    docker: 
      - image: antmounds/cd-builder
    steps:
      - checkout
      - setup_remote_docker
      - deploy:
          name: Deploy
          command: |
            aws --version
            docker --version
            docker-compose --version
            terraform --version
            cd infrastructure/aws-ecs
            terraform init -backend=true -input=false -lock=true -upgrade=true
            terraform plan -input=false -lock=true -refresh=true
            #terraform apply -input=false -lock=true -refresh=true -auto-approve -target=aws_ecs_service.app_service_dev -var app_version_dev=${CI_PIPELINE_IID} 
          
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          filters:
            branches:
              only: develop