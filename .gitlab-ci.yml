.job_template: &job_build  # Hidden key that defines an anchor named 'job_build'
  image: docker:stable
  services:
    - docker:dind

# image: docker:stable

# services:
# - docker:dind

variables:
  # When using dind, it's wise to use the overlayfs driver for
  # improved performance.
  DOCKER_DRIVER: overlay2
  USERNAME: "antmounds"
  IMAGE_NAME: "antennae"
  DOCKERHUB_IMAGE_NAME: ${USERNAME}/${IMAGE_NAME}

stages:
  - build
  - deploy

build_push_gitlab:
  <<: *job_build
  stage: build
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script: 
    - echo "Building the app for Gitlab registry"
    - docker pull $CI_REGISTRY_IMAGE:dev || true
    - docker build --rm --cache-from $CI_REGISTRY_IMAGE:dev -t $CI_REGISTRY_IMAGE --build-arg BUILD=$CI_PIPELINE_IID .
    - docker tag $CI_REGISTRY_IMAGE $CI_REGISTRY_IMAGE:dev
    - docker tag $CI_REGISTRY_IMAGE $CI_REGISTRY_IMAGE:$CI_PIPELINE_IID
    - docker push $CI_REGISTRY_IMAGE

build_push_dockerhub:
  <<: *job_build
  stage: build
  before_script:
    - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
  script: 
    - echo "Building the app for Dockerhub registry"
    - docker pull $CI_REGISTRY_IMAGE:dev || true
    - docker build --rm --cache-from $CI_REGISTRY_IMAGE:dev -t $DOCKERHUB_IMAGE_NAME --build-arg BUILD=$CI_PIPELINE_IID .
    - docker tag $DOCKERHUB_IMAGE_NAME $DOCKERHUB_IMAGE_NAME:dev
    - docker tag $DOCKERHUB_IMAGE_NAME $DOCKERHUB_IMAGE_NAME:$CI_PIPELINE_IID
    - docker push $DOCKERHUB_IMAGE_NAME
  only:
  - master

deploy_dev:
  image: hashicorp/terraform
  stage: deploy
  script: |
      echo "Deploy to dev environment"
      version
      help
  environment:
    name: dev
    url: dev.getantennae.com
  when: manual
  except:
    - master




deploy_staging:
  stage: deploy
  script:
    - echo "Deploy to staging server"
  environment:
    name: staging
    url: https://staging.example.com
  only:
  - master

deploy_prod:
  stage: deploy
  script:
    - echo "Deploy to production server"
  environment:
    name: production
    url: https://example.com
  when: manual
  only:
  - master
