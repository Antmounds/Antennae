{"version":3,"sources":["meteor://ðŸ’»app/imports/api/collections/collections.js","meteor://ðŸ’»app/imports/api/collections/methods.js","meteor://ðŸ’»app/imports/api/collections/publications.js","meteor://ðŸ’»app/imports/api/prints/methods.js","meteor://ðŸ’»app/imports/api/prints/prints.js","meteor://ðŸ’»app/imports/api/prints/publications.js","meteor://ðŸ’»app/imports/api/searches/methods.js","meteor://ðŸ’»app/imports/api/searches/publications.js","meteor://ðŸ’»app/imports/api/searches/searches.js","meteor://ðŸ’»app/imports/startup/server/fixtures.js","meteor://ðŸ’»app/imports/startup/server/index.js","meteor://ðŸ’»app/imports/startup/server/register-api.js","meteor://ðŸ’»app/imports/startup/accounts-config.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","Collections","Mongo","watch","require","v","SimpleSchema","Meteor","Collection","deny","insert","update","remove","Schema","type","String","label","optional","defaultValue","index","unique","allowedValues","Number","Boolean","Date","autoValue","isInsert","isUpdate","attachSchema","publicFields","collection_id","collection_name","collection_type","print_count","private","created","updated","DDPRateLimiter","AWS","default","config","region","rekognition","Rekognition","methods","newCol","check","replace","console","log","collectionParams","CollectionId","collectionRequest","createCollection","promise","catch","error","Error","code","message","then","values","col","colId","findOne","params","deleteCollection","oldCol","_id","publish","collectionId","find","sort","fields","subscribeToCollectionsRule","name","addRule","Prints","newPrint","collection","print_adder","userId","print_collection_id","print_name","print_img","img","simpleSchema","clean","faceParams","ExternalImageId","Image","Buffer","from","split","DetectionAttributes","faceRequest","indexFaces","indexFace","result","print_id","FaceRecords","Face","FaceId","print","printId","FaceIds","printRequest","deleteFaces","oldPrint","Object","blackbox","print_type","print_details","selector","subscribeToPrintsRule","Searches","dashboardStats","collections","count","faces","searches","matches","$ne","matchPercent","Math","round","searchData","matchThreshold","t0","getTime","imgBytes","colIds","fetch","moderationParams","labelParams","celebrityParams","moderationRequest","detectModerationLabels","labelRequest","detectLabels","detectFaces","celebrityRequest","recognizeCelebrities","allPromises","push","_","each","rekognitionParams","rekognitionRequest","searchFacesByImage","response","Promise","all","JSON","stringify","i","persons","FaceMatches","tag","image_id","face_id","similarity","Similarity","t1","search_results","moderation","ModerationLabels","labels","Labels","faceDetails","FaceDetails","celebrity","CelebrityFaces","search","station_name","stationName","saveSearch","reason","details","finally","searchId","runScanRule","subscribeToSearchesRule","isServer","startup","_ensureIndex","search_type","search_collections","search_image","colParams","colRequest","listCollections","cols","CollectionIds","length","awsCol","describeCollection","FaceCount","existingCol","upsert","$set","listFaces","Faces","face","awsFace","ImageId","existingFace","HTTP","os","server_mode","isProduction","settings","info","process","env","BUILD","hostname","getData","results","call","data","headers","e","onConnection","connection","clientAddr","clientAddress","httpHeaders","Accounts","AccountsCommon","AccountsClient","isClient","ui","passwordSignupFields","onCreateUser","options","user"],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\n\n\nexport const Collections = new Meteor.Collection('collections');\n\n// Deny all client-side updates since we will be using methods to manage this collection\nCollections.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\nCollections.Schema = new SimpleSchema({\n  // Our schema rules will go here.\n  \"collection_id\": {\n    type: String,\n    label: \"Collection ID\",\n    optional: false,\n    defaultValue: \"My_Collection\",\n    index: true,\n    unique: true\n  },\n  \"collection_name\": {\n    type: String,\n    label: \"Collection Name\",\n    optional: false,\n    defaultValue: \"My Collection\",\n    index: true\n  },\n  \"collection_type\": {\n    type: String,\n    label: \"Collection type\",\n    optional: false,\n    allowedValues: [\"face\", \"voice\"],\n    defaultValue: \"face\"\n  },\n  \"print_count\": {\n    type: Number,\n    label: \"Print count\",\n    optional: true,\n    defaultValue: 0\n  },\n  \"private\": {\n    type: Boolean,\n    label: \"Collection privacy\",\n    optional: true,\n    defaultValue: true\n  },\n  \"created\": {\n    type: Date,\n    label: \"Date collection added to Antennae\",\n    autoValue: function() {\n      if ( this.isInsert ) {\n        return new Date;\n      } \n    },\n    optional: true\n  },\n  \"updated\": {\n    type: Date,\n    label: \"Date collection updated in System\",\n    autoValue: function() {\n      if ( this.isUpdate ) {\n        return new Date;\n      } \n    },\n    optional: true\n  }\n});\n\nCollections.attachSchema( Collections.Schema ); \n\n\nCollections.publicFields = {\n  collection_id: 1,\n  collection_name: 1,\n  collection_type: 1,\n  print_count: 1,\n  private: 1,\n  created: 1,\n  updated: 1\n};\n\n// Collections.helpers({\n//   // A collections is considered to be private if \"private\" is set to true\n//   isPrivate() {\n//     return this.private;\n//   }\n// });","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport AWS from 'aws-sdk';\n\nimport { Collections } from './collections.js';\n\nAWS.config.region = 'us-east-1';\nvar rekognition = new AWS.Rekognition();\n\nMeteor.methods({\n\t\"collection.save\"(newCol){\n\t\tcheck(newCol.collection_name, String);\n\t\tnewCol.collection_id = newCol.collection_name.replace(/ /g,\"__\");\n\t\tnewCol.private = true;\n\t\tconsole.log(newCol);\n\t\tlet collectionParams = {\n  \t\t\tCollectionId: newCol.collection_id\n\t\t};\n\t\tlet collectionRequest = rekognition.createCollection(collectionParams).promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; });\n\t\tcollectionRequest.then(values => {return values});\n\t\tlet col = Collections.insert(newCol);\n\t\tif(col){\n\t\t\tconsole.log(`added collection: ${col}`);\n\t\t}else{\n            console.log(newCol);\n            throw new Meteor.Error('add-collection-error',`error adding collection: ${newCol}`)\t\t\n\t\t}\n\t\treturn `added collection: ${col}`;\n\t},\n\n\t\"collection.delete\"(colId){\n\t\tcheck(colId,String);\n\t\tlet col = Collections.findOne(colId);\n\t\tconsole.log(col);\n\t\tif(!col){\n\t\t\tthrow new Meteor.Error('no-collection','No collection found with given id!');\n\t\t}else{\n\t\t\tlet params = {\n\t\t\t\tCollectionId: col.collection_id\n\t\t\t};\n\t\t\tlet collectionRequest = rekognition.deleteCollection(params).promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; });\n\t\t\tcollectionRequest.then(values => {return values});\n\t\t\tlet oldCol = Collections.remove(col._id);\n\t\t\tif(oldCol){\n\t\t\t\tconsole.log(`removed collection: ${oldCol}`);\n\t\t\t}else{\n\t            console.log(colId);\n\t            throw new Meteor.Error('remove-collection-error',`error removing collection: ${colId}`)\t\t\n\t\t\t};\n\t\t\treturn `removed collection: ${colId}`;\n\t\t\t\t// let print = Collections.remove(colId);\n\t\t\t\t// console.log(`deleted collection: ${colId}`);\n\t\t\t\t// return `deleted collection: ${colId}`;\n\t\t};\n\t}\n})\n\n// Define a rule to limit method calls\n// let runScanRule = {\n// \ttype: 'method',\n// \tname: 'moment.scan'\n// };\n// Add the rule, allowing up to 1 scan every 10 seconds\n// DDPRateLimiter.addRule(runScanRule, 1, 10000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\n\nimport { Collections } from './collections.js';\n\n\nMeteor.publish('collections.get', function(collectionId='') {\n\tcheck(collectionId,String);\n\tcollectionId = collectionId || {};\n  \t// console.log(Collections.find(collectionId).count());\n\treturn Collections.find(\n\t\tcollectionId, \n\t  { \n\t  \tsort: { created: -1 } \n\t}\n\t, {\n\t\tfields: Collections.publicFields\n\t});\n});\n\n// Define a rule to limit subscription calls\nvar subscribeToCollectionsRule = {\n  type: 'subscription',\n  name: 'collections.get'\n}\n// Add the rule, allowing up to 1 subscription every 5 seconds.\nDDPRateLimiter.addRule(subscribeToCollectionsRule, 1, 5000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport AWS from 'aws-sdk';\n\nimport { Collections } from '../collections/collections.js';\nimport { Prints } from './prints.js';\n\nAWS.config.region = 'us-east-1';\nvar rekognition = new AWS.Rekognition();\n\nMeteor.methods({\n\t\"print.save\"(newPrint){\n\t\tlet col = Collections.findOne(newPrint.collection);\n\t\tconsole.log(col);\n\t\tif(!col){\n\t\t\tthrow new Meteor.Error('no-collection','No collection found with given id!');\n\t\t};\n\t\tnewPrint.print_adder = this.userId || null;\n\t\tnewPrint.print_collection_id = col._id || null;\n\t\tnewPrint.print_name = newPrint.name.replace(/ /g,\"__\");\n\t\tnewPrint.print_img = newPrint.img;\n\t\t// console.log(newPrint);\n\t\tif(!newPrint){\n\t\t\tthrow new Meteor.Error('invalid-print','submitted print is invalid!');\n\t\t};\n\t\tPrints.simpleSchema().clean(newPrint);\n        // index a face into a collection\n        let faceParams = {\n          CollectionId: col.collection_id,\n          ExternalImageId: newPrint.print_name,\n\t\t  Image: { \n\t\t\t\"Bytes\": new Buffer.from(newPrint.print_img.split(\",\")[1], \"base64\"),\n\t\t  },\n          DetectionAttributes: [\"ALL\"]\n        };\n        let faceRequest = rekognition.indexFaces(faceParams);\n        let promise = faceRequest.promise();\n        let indexFace = promise.then(result => {\n        \t// console.log(result);\n        \tnewPrint.print_id = result.FaceRecords[0].Face.FaceId;\n\t\t\tlet print = Prints.insert(newPrint);\n        \tconsole.log(`inserted: ${print}`);\n        \treturn result;\n        }).catch(error => {\n        \tthrow new Meteor.Error(error.code, error.message, error);\n        \treturn error;\n        });\n\t\treturn indexFace;\n\t},\n\n\t\"print.delete\"(printId){\n\t\tcheck(printId,String);\n\t\tlet print = Prints.findOne(printId);\n\t\tconsole.log(print);\n\t\tif(!print){\n\t\t\tthrow new Meteor.Error('no-print','No print found with given id!');\n\t\t}else{\n\t\t\tlet params = {\n\t\t\t\tCollectionId: print.print_collection_id, \n\t\t\t\tFaceIds: [\n\t\t\t\t\tprint.print_id\n\t\t\t\t]\n\t\t\t};\n\t\t\tlet printRequest = rekognition.deleteFaces(params).promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; });\n\t\t\tprintRequest.then(values => {return values});\n\t\t\tlet oldPrint = Prints.remove(print._id);\n\t\t\tif(oldPrint){\n\t\t\t\tconsole.log(`deleted face: ${printId}`);\n\t\t\t}else{\n\t            console.log(printId);\n\t            throw new Meteor.Error('remove-print-error',`error removing print: ${printId}`)\t\t\n\t\t\t};\n\t\t\treturn `removed print: ${printId}`;\n\t\t// if(printId){\n\t\t// \tlet print = Prints.remove(printId);\n\t\t// \tconsole.log(`deleted face: ${printId}`);\n\t\t// \treturn `deleted face: ${printId}`;\n\t\t};\n\t},\n})\n\n// Define a rule to limit method calls\n// let runScanRule = {\n// \ttype: 'method',\n// \tname: 'print.save'\n// };\n// Add the rule, allowing up to 1 scan every 10 seconds\n// DDPRateLimiter.addRule(runScanRule, 1, 10000);","import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\n\n\nexport const Prints = new Meteor.Collection('prints');\n\n// Deny all client-side updates since we will be using methods to manage this collection\nPrints.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\nPrints.Schema = new SimpleSchema({\n  // Our schema rules will go here.\n  \"print_id\": {\n    type: String,\n    label: \"Print ID\",\n    optional: false,\n    defaultValue: \"AAAA-BBBB-CCCC-1111-2222-3333\",\n    index: true,\n    unique: true\n  },\n  \"print_name\": {\n    type: String,\n    label: \"Print Name\",\n    optional: false,\n    defaultValue: \"New Person\"\n  },\n  \"print_type\": {\n    type: String,\n    label: \"Print type\",\n    optional: false,\n    allowedValues: [\"face\", \"voice\", \"finger\"],\n    defaultValue: \"face\"\n  },\n  \"print_collection_id\": {\n    type: String,\n    label: \"Print collection mongo _id\",\n    optional: false,\n    defaultValue: \"people\"\n  },\n  \"print_img\": {\n    type: String,\n    label: \"Print img\",\n    optional: true,\n    defaultValue: \"/img/face-id-100.png\"\n  },\n  \"print_details\": {\n    type: Object,\n    label: \"Print details\",\n    optional: true,\n    blackbox: true\n  },\n  \"print_adder\": {\n    type: String,\n    label: \"User who added print\",\n    optional: false\n  },\n  \"created\": {\n    type: Date,\n    label: \"Date print added to Antennae\",\n    autoValue: function() {\n      if ( this.isInsert ) {\n        return new Date;\n      } \n    },\n    optional: true\n  },\n  \"updated\": {\n    type: Date,\n    label: \"Date print updated in System\",\n    autoValue: function() {\n      if ( this.isUpdate ) {\n        return new Date;\n      } \n    },\n    optional: true\n  }\n});\n\nPrints.attachSchema( Prints.Schema ); \n\n\nPrints.publicFields = {\n  print_id: 1,\n  print_name: 1,\n  print_type: 1,\n  print_collection_id: 1,\n  print_img: 1,\n  print_details: 1,\n  print_adder: 1,\n  created: 1,\n  updated: 1\n};\n\n// Prints.helpers({\n//   // A collections is considered to be private if \"private\" is set to true\n//   isPrivate() {\n//     return this.private;\n//   }\n// });","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\n\nimport { Prints } from './prints.js';\n\n\nMeteor.publish('prints.get', function(collectionId) {\n\tcollectionId = collectionId || \"\";\n\tcheck(collectionId,String);\n\tlet selector = collectionId ? {print_collection_id: collectionId} : {};\n  \tconsole.log(selector);\n\treturn Prints.find(\n\t\tselector, \n\t  { \n\t  \tsort: { created: -1 } \n\t}\n\t, {\n\t\tfields: Prints.publicFields\n\t});\n});\n\n// Define a rule to limit subscription calls\nvar subscribeToPrintsRule = {\n  type: 'subscription',\n  name: 'prints.get'\n}\n// Add the rule, allowing up to 1 subscription every 5 seconds.\nDDPRateLimiter.addRule(subscribeToPrintsRule, 1, 5000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport AWS from 'aws-sdk';\n\nimport { Collections } from '../collections/collections.js';\nimport { Prints } from '../../api/prints/prints.js';\nimport { Searches } from './searches.js';\n\nAWS.config.region = 'us-east-1';\nvar rekognition = new AWS.Rekognition();\n\nMeteor.methods({\n\t\"getDashboardStats\"(){\n\t\tlet dashboardStats = {};\n\t\tdashboardStats.collections = Collections.find({}).count();\n\t\tdashboardStats.faces = Prints.find().count();\n\t\t// dashboardStats.faces = Collections.aggregate(\n\t\t// \t   [\n\t\t// \t     {\n\t\t// \t       $group:\n\t\t// \t\t\t{\n\t\t// \t\t\t\t_id: \"$collection_id\",\n\t\t// \t\t\t\t// face_count: { $sum: \"$print_count\" },\n\t\t// \t\t\t\tcount: { $sum: 1 }\n\t\t// \t\t\t}\n\t\t// \t     },\n\t\t// \t     {\n\t\t// \t     \t$project:\n\t\t// \t     \t{\n\t\t// \t     \t\t_id: 1,\n\t\t// \t     \t\tcount: 1\n\t\t// \t     \t}\n\t\t// \t     }\n\t\t// \t   ]\n\t\t// \t);\n\t\tdashboardStats.searches = Searches.find({}).count();\n\t\tdashboardStats.matches = Searches.find({'search_results.persons': {$ne: []}}).count();\n\t\tdashboardStats.matchPercent = (Math.round((dashboardStats.matches / dashboardStats.searches * 100) * 10) / 10) || 0;\n\t\tconsole.log(dashboardStats.faces);\n\t\treturn dashboardStats;\n\t},\n\n\t\"search.face\"(searchData){\n\t\t//return 1;\n\t\t// if(!Meteor.user){\n\t\t// \tthrow new Meteor.Error('not-logged-in','must be logged-in to perform search');\n\t\t// \treturn false;\n\t\t// }\n\t\t// let matchThreshold = matchThreshold;\n\t\tcheck(searchData.matchThreshold, Number);\n\t\tconsole.log(\"ANALYZING IMAGE...\");\n\t\tvar t0 = new Date().getTime();\n\t\tlet imgBytes = new Buffer.from(searchData.img.split(\",\")[1], \"base64\");\n\t\t// let colId = Meteor.user().profile.collections;\n\t\tlet colIds = Collections.find({collection_type: 'face'}, {fields: {collection_id: 1}}).fetch();\n\t\tconsole.log(colIds)\n\t\tlet moderationParams = {\n\t\t\t\"Image\": { \n\t\t\t\t\"Bytes\": imgBytes,\n\t\t\t},\n\t\t\t\"MinConfidence\": 50,\n\t\t};\n\t\tlet labelParams = {\n\t\t\t\"Image\": { \n\t\t\t\t\"Bytes\": imgBytes,\n\t\t\t},\n\t\t\t\"MaxLabels\": 20,\n\t\t\t\"MinConfidence\": 75,\n\t\t};\n\t\tlet faceParams = {\n\t\t\t\"Image\": { \n\t\t\t\t\"Bytes\": imgBytes,\n\t\t\t},\n  \t\t\t\"Attributes\": [\"ALL\"],\n\t\t};\n\t\tlet celebrityParams = {\n\t\t\t\"Image\": { \n\t\t\t\t\"Bytes\": imgBytes,\n\t\t\t},\n\t\t};\n\t\t// create request objects\n\t\tlet moderationRequest = rekognition.detectModerationLabels(moderationParams);\n\t\tlet labelRequest = rekognition.detectLabels(labelParams);\n\t\tlet faceRequest = rekognition.detectFaces(faceParams);\n\t\tlet celebrityRequest = rekognition.recognizeCelebrities(celebrityParams);\n\t\t// create promises\n\t\tlet allPromises = [];\n\t\tallPromises.push(moderationRequest.promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }));\n\t\tallPromises.push(labelRequest.promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }));\n\t\tallPromises.push(faceRequest.promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }));\n\t\tallPromises.push(celebrityRequest.promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }));\n\t\t_.each(colIds, (colId) => {\n\t\t\tlet rekognitionParams = {\n\t\t\t\t\"CollectionId\": colId.collection_id,\n\t\t\t\t\"FaceMatchThreshold\": searchData.matchThreshold,\n\t\t\t\t\"MaxFaces\": 2,\n\t\t\t\t\"Image\": { \n\t\t\t\t\t\"Bytes\": imgBytes,\n\t\t\t\t},\n\t\t\t};\n\t\t\tconsole.log(rekognitionParams);\n\t\t\tlet rekognitionRequest = rekognition.searchFacesByImage(rekognitionParams);\n\t\t\tallPromises.push(rekognitionRequest.promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }));\n\t\t\tconsole.log(colId.collection_id);\n\t\t});// rekognitionRequest.promise();\n\t\t// Fulfill promises in parallel\n\t\tlet response = Promise.all(\n\t\t\tallPromises\n\t\t).then(values => {\n\t\t\tconsole.log(JSON.stringify(values));\n\t\t\tconsole.log(values[0]);\n\t\t\tconsole.log(values[1]);\n\t\t\tconsole.log(values[2]);\n\t\t\tconsole.log(values[3]);\n\t\t\t//console.log(values[4]);\n\t\t\tlet i = 4;\n\t\t\tlet persons = [];\n\t\t\twhile(values[i]){\n\t\t\t\tconsole.log(values[i]);\n\t\t\t\tif (values[i].FaceMatches[0]){\n\t\t\t\t\tlet colId = Prints.findOne({print_id: values[i].FaceMatches[0].Face.FaceId}, {fields: {print_collection_id: 1}}).print_collection_id;\n\t\t\t\t\tlet tag = {\n\t\t\t\t\t\tcollection: Collections.findOne(colId, {fields: {collection_name: 1}}).collection_name,\n\t\t\t\t\t\timage_id: values[i].FaceMatches[0].Face.ExternalImageId.replace(/__/g,\" \"),\n\t\t\t\t\t\tface_id: values[i].FaceMatches[0].Face.FaceId,\n\t\t\t\t\t\tsimilarity: values[i].FaceMatches[0].Similarity,\n\t\t\t\t\t};\n\t\t\t\t\tpersons.push(tag);\n\t\t\t\t\tconsole.log(tag);\n\t\t\t\t};\n\t\t\t\ti++;\n\t\t\t};\n\t\t\tlet t1 = new Date().getTime();\n\t\t\tconsole.log(`Response took ${t1 - t0} ms`);\n\t\t\tlet search_results = {\n\t\t\t\t\tmoderation: values[0].ModerationLabels,\n\t\t\t\t\tlabels: values[1].Labels,\n\t\t\t\t\tfaceDetails: values[2].FaceDetails,\n\t\t\t\t\tcelebrity: values[3].CelebrityFaces,\n\t\t\t\t\tpersons: persons, //.FaceMatches[0],\n\t\t\t};\n\t\t\tlet search = {\n\t\t\t\t\t// search_image: searchData.img,\n\t\t\t\t\tstation_name: searchData.stationName,\n\t\t\t\t\tsearch_results: search_results\n\t\t\t};\n\t\t\tlet saveSearch = Searches.insert(search);\n\t\t\tconsole.log(saveSearch);\n\t\t\treturn search_results;\n\t\t}).catch(error => {\n\t\t\tconsole.log('caught error!');\n\t\t\tconsole.log(error);\n\t\t\tthrow new Meteor.Error(error.error, error.reason, error.details);\n\t\t}).finally(() => {\n\t\t\tconsole.log('finally');\n\t\t\tconsole.log(this);\n\t\t});\n\t\tconsole.log(response);\n\t\tlet t1 = new Date().getTime();\n\t\tconsole.log(`Request took ${t1 - t0} ms`);\n\t\treturn response;\n\t},\n\n\t\"search.delete\"(searchId){\n\t\tcheck(searchId,String);\n\t\tif(searchId){\n\t\t\tlet search = Searches.remove(searchId);\n\t\t\tconsole.log(`deleted search: ${searchId}`);\n\t\t\treturn `deleted search: ${searchId}`;\n\t\t};\n\t}\n})\n\n// Define a rule to limit method calls\nlet runScanRule = {\n\ttype: 'method',\n\tname: 'moment.scan'\n};\n// Add the rule, allowing up to 1 scan every 10 seconds\nDDPRateLimiter.addRule(runScanRule, 1, 10000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\n\nimport { Searches } from './searches.js';\n\n\nMeteor.publish('searches.get', function(searchId='') {\n\tcheck(searchId,String);\n\tsearchId = searchId || {};\n  \t// console.log(Searches.find(searchId).count());\n\treturn Searches.find(\n\t\tsearchId, \n\t  { \n\t  \tsort: { created: -1 } \n\t}\n\t, {\n\t\tfields: Searches.publicFields\n\t});\n});\n\n// Define a rule to limit subscription calls\nvar subscribeToSearchesRule = {\n  type: 'subscription',\n  name: 'searches.get'\n}\n// Add the rule, allowing up to 1 subscription every 5 seconds.\nDDPRateLimiter.addRule(subscribeToSearchesRule, 1, 5000);","import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\n\n\nexport const Searches = new Meteor.Collection('searches');\n\n// Deny all client-side updates since we will be using methods to manage this collection\nSearches.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\nSearches.Schema = new SimpleSchema({\n  \"station_name\": {\n    type: String,\n    label: \"Station search performed at\",\n    optional: true,\n    defaultValue: \"Station 1\"\n  },\n  // schema rules\n  \"search_type\": {\n    type: [String],\n    label: \"Search types\",\n    optional: false,\n    allowedValues: [\"moderation\", \"label\", \"face\", \"collection\"],\n    defaultValue: [\"moderation\", \"label\", \"face\"]\n  },\n  \"search_collections\": {\n    type: [String],\n    label: \"Collections to search\",\n    optional: true,\n    defaultValue: [\"\"]\n  },\n  \"search_image\": {\n    type: String,\n    label: \"Image to search\",\n    optional: true,\n    defaultValue: \"/img/face-id-100.png\"\n  },\n  \"search_results\": {\n    type: Object,\n    label: \"Object of search types\",\n    optional: true,\n    blackbox: true,\n    defaultValue: {}\n  },\n  \"faces\": {\n    type: [Object],\n    label: \"Face objects found in image\",\n    optional: true,\n    blackbox: true,\n    defaultValue: []\n  },\n  \"created\": {\n    type: Date,\n    label: \"Date search performed\",\n    autoValue: function() {\n      if ( this.isInsert ) {\n        return new Date;\n      } \n    },\n    optional: true,\n    //index: true\n  },\n  \"updated\": {\n    type: Date,\n    label: \"Date search updated\",\n    autoValue: function() {\n      if ( this.isUpdate ) {\n        return new Date;\n      } \n    },\n    optional: true\n  }\n});\n\nSearches.attachSchema( Searches.Schema );\n\nif(Meteor.isServer){\n  Meteor.startup(() => {\n    Searches._ensureIndex({\n        created: -1,\n    });\n    // Searches._ensureIndex({ search_image: 1});\n  });\n}\n\nSearches.publicFields = {\n  station_name: 1,\n  search_type: 1,\n  search_collections: 1,\n  search_image: 1,\n  search_results: 1,\n  created: 1,\n  updated: 1\n};\n\n// Searches.helpers({\n//   // A collections is considered to be private if \"private\" is set to true\n//   isPrivate() {\n//     return this.private;\n//   }\n// });","import { Meteor } from 'meteor/meteor';\nimport { Collections } from '../../api/collections/collections.js';\nimport { Prints } from '../../api/prints/prints.js';\nimport { Searches } from '../../api/searches/searches.js';\nimport AWS from 'aws-sdk';\n\nAWS.config.region = 'us-east-1';\nvar rekognition = new AWS.Rekognition();\n\n// if the database is empty on server start, create some sample data.\n\nMeteor.startup(() => {\n\n  console.log(\"syncing aws collections...\");\n  let colParams = {};\n  let colRequest = rekognition.listCollections();\n  let promise = colRequest.promise();\n// colParams = {\n//            \"CollectionId\": \"macies\"\n//         };\n//   let test =      rekognition.describeCollection(colParams).promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }).then(result => {\n//           console.log(result);\n//           return result;\n//         });\n//     console.log(test);\n  let cols = promise.then(result => {\n    console.log(result);\n    if(result && result.CollectionIds.length > 0){\n      _.each(result.CollectionIds, function(colId){\n        let awsCol = {\n          collection_id: colId,\n          collection_name: colId.replace(\"__\", \" \"),\n          collection_type: \"face\"\n        };\n        // describe collection to get face count\n        colParams = {\n           \"CollectionId\": colId\n        };\n        rekognition.describeCollection(colParams).promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }).then(result => {\n          awsCol.print_count = result.FaceCount;\n          console.log(`${colId} collection has ${result.FaceCount} faces`);\n          console.log(awsCol);\n          let existingCol = Collections.upsert({collection_id: colId}, {$set: awsCol});\n          console.log(`upserted collection: ${JSON.stringify(existingCol)}`);\n        });\n        // Now try getting existing faces for each collection\n        let faceParams = {\n          CollectionId: colId\n        };\n        let faceRequest = rekognition.listFaces(faceParams);\n        let promise = faceRequest.promise();\n        let faces = promise.then(result => {\n          if(result && result.Faces.length > 0){\n            let collection_id = Collections.findOne({collection_id: colId})._id;\n            _.each(result.Faces, function(face){\n              let awsFace = {\n                print_id: face.FaceId,\n                print_name: face.ExternalImageId.replace(\"_\", \" \") || face.ImageId,\n                print_type: \"face\",\n                print_collection_id: collection_id,\n                print_details: face,\n                print_adder: \"root\"\n              };\n              Prints.simpleSchema().clean(awsFace);\n              let existingFace = Prints.upsert({print_id: face.FaceId}, {$set: awsFace});\n              console.log(`upserted print: ${JSON.stringify(existingFace)}`);\n            })\n          }\n        });\n      });\n    }\n    return result;\n  });\n\n  // if (Prints.find().count() < 15) {\n  //   console.log(\"seeding prints...\");\n  //   let seedPrints = []\n  //   _.times(5, ()=>{\n  //     let print = {\n  //       print_adder: this.userId || \"root\",\n  //       print_collection: \"people\",\n  //       print_collection_id: \"people\",\n  //       print_name: faker.helpers.userCard().name,\n  //       print_id: faker.random.uuid(),\n  //       print_img: faker.image.avatar()\n  //     };\n  //     let printId = Prints.insert(print);\n  //     seedPrints.push(printId);\n  //   });\n  //   console.log(seedPrints);\n\n  // };\n});","/*\n * Copyright 2017-present Antmounds.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the GNU Affero General Public License, version 3.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     https://www.gnu.org/licenses/agpl-3.0.en.html\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport '../accounts-config.js';\nimport './fixtures.js';\n// This defines all the collections, publications and methods that the application provides\n// as an API to the client.\nimport './register-api.js';\n\nconst os = require('os');\n\n\nserver_mode = Meteor.isProduction ? \"PRODUCTION\" : \"DEVELOPMENT\";\nconsole.log('index.js: ' + server_mode + \"-->\" + JSON.stringify(Meteor.settings));\n\nMeteor.methods({\n\n\tinfo(){\n\t\treturn `release: lite - version: 0.9 - build: ${process.env.BUILD || 'dev'} - hostname: ${os.hostname()}`;\n\t},\n\n\tasync getData(){    \n\t\ttry{\n\t\t\tvar response = {};\n\t\t\tconst results = await HTTP.call('GET', 'http://jsonplaceholder.typicode.com/posts');\t\n\t\t\tconsole.log(JSON.stringify(results.data[0]));\t\n\t\t\tconsole.log(JSON.stringify(results.headers));\n\t\t\tresponse.code = true;\n\t\t\tresponse.data = results;\n\t\t} catch(e){\n\t\t\tresponse = false;\n\t\t\tconsole.log(e);\n\t\t} finally {\n\t\t\tconsole.log(\"finally...\")\n\t\t\t//throw new Meteor.Error(\"inappropriate-pic\",\"The user has taken an inappropriate picture.\");\t\n\t\t\treturn response;\n\t\t}\n\t}\n\n});\n\nMeteor.onConnection((connection)=>{\n\tlet clientAddr = connection.clientAddress;\n\tlet headers = connection.httpHeaders;\n\tconsole.log(`connection from ${clientAddr}`);\n\t// console.log(headers);\n})","import '../../api/collections/methods.js';\nimport '../../api/collections/publications.js';\nimport '../../api/searches/methods.js';\nimport '../../api/searches/publications.js';\nimport '../../api/prints/methods.js';\nimport '../../api/prints/publications.js';","import { Accounts } from 'meteor/accounts-base';\nimport { AccountsCommon } from 'meteor/accounts-base'\nimport { AccountsClient } from 'meteor/accounts-base'\n\n\nif (Meteor.isClient) {\n\tAccounts.ui.config({\n\t  passwordSignupFields: 'USERNAME_AND_EMAIL',\n\t});\n}\n\nif (Meteor.isServer) {\n\tconsole.log(\"accounts config loaded!\");\n\tAccounts.onCreateUser((options, user) => {\n\t\t// user.created = new Date();\n\n\t\tconsole.log(\"user: \" + user);\n\t\tconsole.log(\"options: \" + options);\n\t\t// user = JSON.stringify(user);\n\t\tconsole.log(user);\n\t\t// options = JSON.stringify(options);\n\t\tconsole.log(options);\n\n\t    // Don't forget to return the new user object at the end!\n\t\treturn user;\n\t});\n}","/*\n * Copyright 2017-present Antmounds.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the GNU Affero General Public License, version 3.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     https://www.gnu.org/licenses/agpl-3.0.en.html\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport '../imports/startup/server';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}