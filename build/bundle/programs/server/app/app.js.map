{"version":3,"sources":["meteor://ðŸ’»app/imports/api/collections/collections.js","meteor://ðŸ’»app/imports/api/collections/publications.js","meteor://ðŸ’»app/imports/api/searches/methods.js","meteor://ðŸ’»app/imports/api/searches/publications.js","meteor://ðŸ’»app/imports/api/searches/searches.js","meteor://ðŸ’»app/imports/startup/server/index.js","meteor://ðŸ’»app/imports/startup/server/register-api.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","Collections","Mongo","watch","require","v","SimpleSchema","Meteor","Collection","deny","insert","update","remove","Schema","type","String","label","optional","defaultValue","allowedValues","Date","autoValue","isInsert","isUpdate","attachSchema","publicFields","collection_id","collection_name","collection_type","created","updated","DDPRateLimiter","publish","collectionId","check","console","log","find","count","sort","fields","subscribeToCollectionsRule","name","addRule","AWS","default","Searches","config","region","rekognition","Rekognition","methods","picData","t0","getTime","imgBytes","Buffer","from","split","moderationParams","labelParams","faceParams","moderationRequest","detectModerationLabels","labelRequest","detectLabels","faceRequest","detectFaces","promise1","promise","promise2","promise3","response","Promise","all","catch","error","Error","code","message","then","values","t1","search_results","moderation","ModerationLabels","labels","Labels","faceDetails","FaceDetails","search","search_image","saveSearch","reason","details","finally","runScanRule","searchId","subscribeToSearchesRule","Object","blackbox","isServer","startup","_ensureIndex","search_id","search_type","search_collections","HTTP","os","server_mode","isProduction","JSON","stringify","settings","info","process","env","BUILD","hostname","getData","results","call","data","headers","e","onConnection","connection","clientAddr","clientAddress","httpHeaders"],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\n\n\nexport const Collections = new Meteor.Collection('collections');\n\n// Deny all client-side updates since we will be using methods to manage this collection\nCollections.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\nCollections.Schema = new SimpleSchema({\n  // Our schema rules will go here.\n  \"collection_id\": {\n    type: String,\n    label: \"Collection ID\",\n    optional: false,\n    defaultValue: \"Collection ID\"\n  },\n  \"collection_name\": {\n    type: String,\n    label: \"Collection Name\",\n    optional: false,\n    defaultValue: \"MyCollection\"\n  },\n  \"collection_type\": {\n    type: String,\n    label: \"Collection type\",\n    optional: false,\n    allowedValues: [\"face\", \"voice\"],\n    defaultValue: \"face\"\n  },\n  \"created\": {\n    type: Date,\n    label: \"Date collection added to Antennae\",\n    autoValue: function() {\n      if ( this.isInsert ) {\n        return new Date;\n      } \n    },\n    optional: true\n  },\n  \"updated\": {\n    type: Date,\n    label: \"Date collection updated in System\",\n    autoValue: function() {\n      if ( this.isUpdate ) {\n        return new Date;\n      } \n    },\n    optional: true\n  }\n});\n\nCollections.attachSchema( Collections.Schema ); \n\n\nCollections.publicFields = {\n  collection_id: 1,\n  collection_name: 1,\n  collection_type: 1,\n  created: 1,\n  updated: 1\n};\n\n// Collections.helpers({\n//   // A collections is considered to be private if \"private\" is set to true\n//   isPrivate() {\n//     return this.private;\n//   }\n// });","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\n\nimport { Collections } from './collections.js';\n\n\nMeteor.publish('collections.get', function(collectionId='') {\n\tcheck(collectionId,String);\n\tcollectionId = collectionId || {};\n  \tconsole.log(Collections.find(collectionId).count());\n\treturn Collections.find(\n\t\tcollectionId, \n\t  { \n\t  \tsort: { created: -1 } \n\t}\n\t, {\n\t\tfields: Collections.publicFields\n\t});\n});\n\n// Define a rule to limit subscription calls\nvar subscribeToCollectionsRule = {\n  type: 'subscription',\n  name: 'collections.get'\n}\n// Add the rule, allowing up to 1 subscription every 5 seconds.\nDDPRateLimiter.addRule(subscribeToCollectionsRule, 1, 5000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport AWS from 'aws-sdk';\n\nimport { Searches } from './searches.js';\n\nAWS.config.region = 'us-east-1';\nvar rekognition = new AWS.Rekognition();\n\nMeteor.methods({\n\t\"search.face\"(picData){\n\t\t//return 1;\n\t\tconsole.log(\"ANALYZING IMAGE...\");\n\t\tvar t0 = new Date().getTime();\n\t\tlet imgBytes = new Buffer.from(picData.split(\",\")[1], \"base64\");\n\t\tlet moderationParams = {\n\t\t\t\"Image\": { \n\t\t\t\t\"Bytes\": imgBytes,\n\t\t\t},\n\t\t\t\"MinConfidence\": 50,\n\t\t};\n\t\tlet labelParams = {\n\t\t\t\"Image\": { \n\t\t\t\t\"Bytes\": imgBytes,\n\t\t\t},\n\t\t\t\"MaxLabels\": 20,\n\t\t\t\"MinConfidence\": 75,\n\t\t};\n\t\tlet faceParams = {\n\t\t\t\"Image\": { \n\t\t\t\t\"Bytes\": imgBytes,\n\t\t\t},\n  \t\t\t\"Attributes\": [\"ALL\"],\n\t\t};\n\t\t// create request objects\n\t\tlet moderationRequest = rekognition.detectModerationLabels(moderationParams);\n\t\tlet labelRequest = rekognition.detectLabels(labelParams);\n\t\tlet faceRequest = rekognition.detectFaces(faceParams);\n\t\t// create promises\n\t\tlet promise1 = moderationRequest.promise();\n\t\tlet promise2 = labelRequest.promise();\n\t\tlet promise3 = faceRequest.promise();\n\t\t// Fulfill promises in parallel\n\t\tlet response = Promise.all([\n\t\t\tpromise1.catch(error => { throw new Meteor.Error(error.code, error.message, error);return error; }),\n\t\t\tpromise2.catch(error => { throw new Meteor.Error(error.code, error.message, error);return error; }),\n\t\t\tpromise3.catch(error => { throw new Meteor.Error(error.code, error.message, error);return error; }),\n\t\t]).then(values => {\n\t\t\tconsole.log(values[0]);\n\t\t\tconsole.log(values[1]);\n\t\t\tconsole.log(values[2]);\n\t\t\tlet t1 = new Date().getTime();\n\t\t\tconsole.log(`Response took ${t1 - t0} ms`);\n\t\t\tlet search_results = {\n\t\t\t\tmoderation: values[0].ModerationLabels,\n\t\t\t\tlabels: values[1].Labels,\n\t\t\t\tfaceDetails: values[2].FaceDetails\n\t\t\t};\n\t\t\tlet search = {\n\t\t\t\tsearch_image: picData,\n\t\t\t\tsearch_results: search_results\n\t\t\t};\n\t\t\tlet saveSearch = Searches.insert(search);\n\t\t\tconsole.log(saveSearch);\n\t\t\treturn values;\n\t\t}).catch(error => {\n\t\t\tconsole.log('caught error!');\n\t\t\tconsole.log(error);\n\t\t\tthrow new Meteor.Error(error.error, error.reason, error.details);\n\t\t}).finally(() => {\n\t\t\tconsole.log('finally');\n\t\t\tconsole.log(this);\n\t\t});\n\t\tconsole.log(response);\n\t\tlet t1 = new Date().getTime();\n\t\tconsole.log(`Request took ${t1 - t0} ms`);\n\t\treturn response;\n\t}\n})\n\n// Define a rule to limit method calls\nlet runScanRule = {\n\ttype: 'method',\n\tname: 'moment.scan'\n};\n// Add the rule, allowing up to 1 scan every 10 seconds\nDDPRateLimiter.addRule(runScanRule, 1, 10000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\n\nimport { Searches } from './searches.js';\n\n\nMeteor.publish('searches.get', function(searchId='') {\n\tcheck(searchId,String);\n\tsearchId = searchId || {};\n  \tconsole.log(Searches.find(searchId).count());\n\treturn Searches.find(\n\t\tsearchId, \n\t  { \n\t  \tsort: { created: -1 } \n\t}\n\t, {\n\t\tfields: Searches.publicFields\n\t});\n});\n\n// Define a rule to limit subscription calls\nvar subscribeToSearchesRule = {\n  type: 'subscription',\n  name: 'searches.get'\n}\n// Add the rule, allowing up to 1 subscription every 5 seconds.\nDDPRateLimiter.addRule(subscribeToSearchesRule, 1, 5000);","import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\n\n\nexport const Searches = new Meteor.Collection('searches');\n\n// Deny all client-side updates since we will be using methods to manage this collection\nSearches.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\nSearches.Schema = new SimpleSchema({\n  // schema rules\n  \"search_type\": {\n    type: [String],\n    label: \"Search types\",\n    optional: false,\n    allowedValues: [\"moderation\", \"label\", \"face\", \"collection\"],\n    defaultValue: [\"moderation\", \"label\", \"face\"]\n  },\n  \"search_collections\": {\n    type: [String],\n    label: \"Collections to search\",\n    optional: true,\n    defaultValue: [\"\"]\n  },\n  \"search_image\": {\n    type: String,\n    label: \"Image to search\",\n    optional: true,\n    defaultValue: \"\"\n  },\n  \"search_results\": {\n    type: Object,\n    label: \"Object of search types\",\n    optional: true,\n    blackbox: true,\n    defaultValue: {}\n  },\n  \"faces\": {\n    type: [Object],\n    label: \"Face objects found in image\",\n    optional: true,\n    blackbox: true,\n    defaultValue: []\n  },\n  \"created\": {\n    type: Date,\n    label: \"Date search performed\",\n    autoValue: function() {\n      if ( this.isInsert ) {\n        return new Date;\n      } \n    },\n    optional: true,\n    //index: true\n  },\n  \"updated\": {\n    type: Date,\n    label: \"Date search updated\",\n    autoValue: function() {\n      if ( this.isUpdate ) {\n        return new Date;\n      } \n    },\n    optional: true\n  }\n});\n\nSearches.attachSchema( Searches.Schema );\n\nif(Meteor.isServer){\n  Meteor.startup(() => {\n    Searches._ensureIndex({\n        created: -1,\n    });\n    // Searches._ensureIndex({ search_image: 1});\n  });\n}\n\nSearches.publicFields = {\n  search_id: 1,\n  search_type: 1,\n  search_collections: 1,\n  search_image: 1,\n  search_results: 1,\n  created: 1,\n  updated: 1\n};\n\n// Searches.helpers({\n//   // A collections is considered to be private if \"private\" is set to true\n//   isPrivate() {\n//     return this.private;\n//   }\n// });","/*\n * Copyright 2017-present Antmounds.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the GNU Affero General Public License, version 3.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     https://www.gnu.org/licenses/agpl-3.0.en.html\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\n// import AWS from 'aws-sdk';\n// import '../accounts-config.js';\n// This defines all the collections, publications and methods that the application provides\n// as an API to the client.\nimport './register-api.js';\n// import './fixtures.js';\n\nconst os = require('os');\n\n\nserver_mode = Meteor.isProduction ? \"PRODUCTION\" : \"DEVELOPMENT\";\nconsole.log('index.js: ' + server_mode + \"-->\" + JSON.stringify(Meteor.settings));\n\nMeteor.methods({\n\n\tinfo(){\n\t\treturn `version: 0.9.0 - build: ${process.env.BUILD || 'dev'} - hostname: ${os.hostname()}`;\n\t},\n\n\tasync getData(){    \n\t\ttry{\n\t\t\tvar response = {};\n\t\t\tconst results = await HTTP.call('GET', 'http://jsonplaceholder.typicode.com/posts');\t\n\t\t\tconsole.log(JSON.stringify(results.data[0]));\t\n\t\t\tconsole.log(JSON.stringify(results.headers));\n\t\t\tresponse.code = true;\t\t\n\t\t\tresponse.data = results;\t\n\t\t} catch(e){\n\t\t\tresponse = false;\n\t\t\tconsole.log(e);\n\t\t} finally {\n\t\t\tconsole.log(\"finally...\")\n\t\t\t//throw new Meteor.Error(\"inappropriate-pic\",\"The user has taken an inappropriate picture.\");\t\n\t\t\treturn response;\n\t\t}\n\t}\n\n});\n\nMeteor.onConnection((connection)=>{\n\tlet clientAddr = connection.clientAddress;\n\tlet headers = connection.httpHeaders;\n\tconsole.log(`connection from ${clientAddr}`);\n\t// console.log(headers);\n})","import '../../api/collections/publications.js';\nimport '../../api/searches/methods.js';\nimport '../../api/searches/publications.js';","/*\n * Copyright 2017-present Antmounds.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the GNU Affero General Public License, version 3.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     https://www.gnu.org/licenses/agpl-3.0.en.html\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport '../imports/startup/server';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}