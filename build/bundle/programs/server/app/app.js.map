{"version":3,"sources":["meteor://ðŸ’»app/imports/api/collections/collections.js","meteor://ðŸ’»app/imports/api/collections/methods.js","meteor://ðŸ’»app/imports/api/collections/publications.js","meteor://ðŸ’»app/imports/api/prints/methods.js","meteor://ðŸ’»app/imports/api/prints/prints.js","meteor://ðŸ’»app/imports/api/prints/publications.js","meteor://ðŸ’»app/imports/api/searches/methods.js","meteor://ðŸ’»app/imports/api/searches/publications.js","meteor://ðŸ’»app/imports/api/searches/searches.js","meteor://ðŸ’»app/imports/startup/server/fixtures.js","meteor://ðŸ’»app/imports/startup/server/index.js","meteor://ðŸ’»app/imports/startup/server/register-api.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","Collections","Mongo","watch","require","v","SimpleSchema","Meteor","Collection","deny","insert","update","remove","Schema","type","String","label","optional","defaultValue","index","unique","allowedValues","Boolean","Date","autoValue","isInsert","isUpdate","attachSchema","publicFields","collection_id","collection_name","collection_type","private","created","updated","DDPRateLimiter","AWS","default","config","region","rekognition","Rekognition","methods","newCol","console","log","col","Error","colId","check","print","publish","collectionId","find","sort","fields","subscribeToCollectionsRule","name","addRule","Prints","newPrint","print_adder","userId","print_collection","findOne","collection","print_name","print_img","img","simpleSchema","clean","printId","print_id","print_type","print_details","subscribeToPrintsRule","Searches","picData","t0","getTime","imgBytes","Buffer","from","split","moderationParams","labelParams","faceParams","moderationRequest","detectModerationLabels","labelRequest","detectLabels","faceRequest","detectFaces","promise1","promise","promise2","promise3","response","Promise","all","catch","error","code","message","then","values","t1","search_results","moderation","ModerationLabels","labels","Labels","faceDetails","FaceDetails","search","search_image","saveSearch","reason","details","finally","runScanRule","searchId","subscribeToSearchesRule","Object","blackbox","isServer","startup","_ensureIndex","search_id","search_type","search_collections","count","seedPrints","_","times","faker","helpers","userCard","random","uuid","image","avatar","push","HTTP","os","server_mode","isProduction","JSON","stringify","settings","info","process","env","BUILD","hostname","getData","results","call","data","headers","e","onConnection","connection","clientAddr","clientAddress","httpHeaders"],"mappings":";;;;;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,eAAY,MAAIA;AAAjB,CAAd;AAA6C,IAAIC,KAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,QAAMG,CAAN,EAAQ;AAACH,YAAMG,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,YAAJ;AAAiBP,OAAOI,KAAP,CAAaC,QAAQ,6BAAR,CAAb,EAAoD;AAACE,eAAaD,CAAb,EAAe;AAACC,mBAAaD,CAAb;AAAe;;AAAhC,CAApD,EAAsF,CAAtF;AAK7H,MAAMJ,cAAc,IAAIM,OAAOC,UAAX,CAAsB,aAAtB,CAApB;AAEP;AACAP,YAAYQ,IAAZ,CAAiB;AACfC,WAAS;AAAE,WAAO,IAAP;AAAc,GADV;;AAEfC,WAAS;AAAE,WAAO,IAAP;AAAc,GAFV;;AAGfC,WAAS;AAAE,WAAO,IAAP;AAAc;;AAHV,CAAjB;AAMAX,YAAYY,MAAZ,GAAqB,IAAIP,YAAJ,CAAiB;AACpC;AACA,mBAAiB;AACfQ,UAAMC,MADS;AAEfC,WAAO,eAFQ;AAGfC,cAAU,KAHK;AAIfC,kBAAc,eAJC;AAKfC,WAAO,IALQ;AAMfC,YAAQ;AANO,GAFmB;AAUpC,qBAAmB;AACjBN,UAAMC,MADW;AAEjBC,WAAO,iBAFU;AAGjBC,cAAU,KAHO;AAIjBC,kBAAc,cAJG;AAKjBC,WAAO;AALU,GAViB;AAiBpC,qBAAmB;AACjBL,UAAMC,MADW;AAEjBC,WAAO,iBAFU;AAGjBC,cAAU,KAHO;AAIjBI,mBAAe,CAAC,MAAD,EAAS,OAAT,CAJE;AAKjBH,kBAAc;AALG,GAjBiB;AAwBpC,aAAW;AACTJ,UAAMQ,OADG;AAETN,WAAO,oBAFE;AAGTC,cAAU,KAHD;AAITC,kBAAc;AAJL,GAxByB;AA8BpC,aAAW;AACTJ,UAAMS,IADG;AAETP,WAAO,mCAFE;AAGTQ,eAAW,YAAW;AACpB,UAAK,KAAKC,QAAV,EAAqB;AACnB,eAAO,IAAIF,IAAJ,EAAP;AACD;AACF,KAPQ;AAQTN,cAAU;AARD,GA9ByB;AAwCpC,aAAW;AACTH,UAAMS,IADG;AAETP,WAAO,mCAFE;AAGTQ,eAAW,YAAW;AACpB,UAAK,KAAKE,QAAV,EAAqB;AACnB,eAAO,IAAIH,IAAJ,EAAP;AACD;AACF,KAPQ;AAQTN,cAAU;AARD;AAxCyB,CAAjB,CAArB;AAoDAhB,YAAY0B,YAAZ,CAA0B1B,YAAYY,MAAtC;AAGAZ,YAAY2B,YAAZ,GAA2B;AACzBC,iBAAe,CADU;AAEzBC,mBAAiB,CAFQ;AAGzBC,mBAAiB,CAHQ;AAIzBC,WAAS,CAJgB;AAKzBC,WAAS,CALgB;AAMzBC,WAAS;AANgB,CAA3B,C,CASA;AACA;AACA;AACA;AACA;AACA,M;;;;;;;;;;;ACnFA,IAAIC,cAAJ;AAAmBpC,OAAOI,KAAP,CAAaC,QAAQ,yBAAR,CAAb,EAAgD;AAAC+B,iBAAe9B,CAAf,EAAiB;AAAC8B,qBAAe9B,CAAf;AAAiB;;AAApC,CAAhD,EAAsF,CAAtF;AAAyF,IAAI+B,GAAJ;AAAQrC,OAAOI,KAAP,CAAaC,QAAQ,SAAR,CAAb,EAAgC;AAACiC,UAAQhC,CAAR,EAAU;AAAC+B,UAAI/B,CAAJ;AAAM;;AAAlB,CAAhC,EAAoD,CAApD;AAAuD,IAAIJ,WAAJ;AAAgBF,OAAOI,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACH,cAAYI,CAAZ,EAAc;AAACJ,kBAAYI,CAAZ;AAAc;;AAA9B,CAAzC,EAAyE,CAAzE;AAK3L+B,IAAIE,MAAJ,CAAWC,MAAX,GAAoB,WAApB;AACA,IAAIC,cAAc,IAAIJ,IAAIK,WAAR,EAAlB;AAEAlC,OAAOmC,OAAP,CAAe;AACd,oBAAkBC,MAAlB,EAAyB;AACxBC,YAAQC,GAAR,CAAYF,MAAZ;AACA,QAAIG,MAAM7C,YAAYS,MAAZ,CAAmBiC,MAAnB,CAAV;;AACA,QAAGG,GAAH,EAAO;AACNF,cAAQC,GAAR,CAAa,qBAAoBC,GAAI,EAArC;AACA,KAFD,MAEK;AACKF,cAAQC,GAAR,CAAYF,MAAZ;AACA,YAAM,IAAIpC,OAAOwC,KAAX,CAAiB,sBAAjB,EAAyC,4BAA2BJ,MAAO,EAA3E,CAAN;AACT;;AACD,WAAQ,qBAAoBG,GAAI,EAAhC;AACA,GAXa;;AAad,sBAAoBE,KAApB,EAA0B;AACzBC,UAAMD,KAAN,EAAYjC,MAAZ;;AACA,QAAGiC,KAAH,EAAS;AACR,UAAIE,QAAQjD,YAAYW,MAAZ,CAAmBoC,KAAnB,CAAZ;AACAJ,cAAQC,GAAR,CAAa,uBAAsBG,KAAM,EAAzC;AACA,aAAQ,uBAAsBA,KAAM,EAApC;AACA;;AAAA;AACD;;AApBa,CAAf,E,CAuBA;AACA;AACA;AACA;AACA;AACA;AACA,iD;;;;;;;;;;;ACrCA,IAAIb,cAAJ;AAAmBpC,OAAOI,KAAP,CAAaC,QAAQ,yBAAR,CAAb,EAAgD;AAAC+B,iBAAe9B,CAAf,EAAiB;AAAC8B,qBAAe9B,CAAf;AAAiB;;AAApC,CAAhD,EAAsF,CAAtF;AAAyF,IAAIJ,WAAJ;AAAgBF,OAAOI,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACH,cAAYI,CAAZ,EAAc;AAACJ,kBAAYI,CAAZ;AAAc;;AAA9B,CAAzC,EAAyE,CAAzE;AAK5HE,OAAO4C,OAAP,CAAe,iBAAf,EAAkC,UAASC,eAAa,EAAtB,EAA0B;AAC3DH,QAAMG,YAAN,EAAmBrC,MAAnB;AACAqC,iBAAeA,gBAAgB,EAA/B,CAF2D,CAGzD;;AACF,SAAOnD,YAAYoD,IAAZ,CACND,YADM,EAEL;AACCE,UAAM;AAAErB,eAAS,CAAC;AAAZ;AADP,GAFK,EAKL;AACDsB,YAAQtD,YAAY2B;AADnB,GALK,CAAP;AAQA,CAZD,E,CAcA;;AACA,IAAI4B,6BAA6B;AAC/B1C,QAAM,cADyB;AAE/B2C,QAAM,iBAFyB,CAIjC;;AAJiC,CAAjC;AAKAtB,eAAeuB,OAAf,CAAuBF,0BAAvB,EAAmD,CAAnD,EAAsD,IAAtD,E;;;;;;;;;;;ACzBA,IAAIrB,cAAJ;AAAmBpC,OAAOI,KAAP,CAAaC,QAAQ,yBAAR,CAAb,EAAgD;AAAC+B,iBAAe9B,CAAf,EAAiB;AAAC8B,qBAAe9B,CAAf;AAAiB;;AAApC,CAAhD,EAAsF,CAAtF;AAAyF,IAAI+B,GAAJ;AAAQrC,OAAOI,KAAP,CAAaC,QAAQ,SAAR,CAAb,EAAgC;AAACiC,UAAQhC,CAAR,EAAU;AAAC+B,UAAI/B,CAAJ;AAAM;;AAAlB,CAAhC,EAAoD,CAApD;AAAuD,IAAIJ,WAAJ;AAAgBF,OAAOI,KAAP,CAAaC,QAAQ,+BAAR,CAAb,EAAsD;AAACH,cAAYI,CAAZ,EAAc;AAACJ,kBAAYI,CAAZ;AAAc;;AAA9B,CAAtD,EAAsF,CAAtF;AAAyF,IAAIsD,MAAJ;AAAW5D,OAAOI,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACuD,SAAOtD,CAAP,EAAS;AAACsD,aAAOtD,CAAP;AAAS;;AAApB,CAApC,EAA0D,CAA1D;AAM/R+B,IAAIE,MAAJ,CAAWC,MAAX,GAAoB,WAApB;AACA,IAAIC,cAAc,IAAIJ,IAAIK,WAAR,EAAlB;AAEAlC,OAAOmC,OAAP,CAAe;AACd,eAAakB,QAAb,EAAsB;AACrBA,aAASC,WAAT,GAAuB,KAAKC,MAAL,IAAe,MAAtC;AACAF,aAASG,gBAAT,GAA4B9D,YAAY+D,OAAZ,CAAoBJ,SAASK,UAA7B,KAA4C,QAAxE;AACAL,aAASM,UAAT,GAAsBN,SAASH,IAA/B;AACAG,aAASO,SAAT,GAAqBP,SAASQ,GAA9B,CAJqB,CAKrB;;AACAT,WAAOU,YAAP,GAAsBC,KAAtB,CAA4BV,QAA5B;;AACA,QAAG,CAACA,QAAJ,EAAa;AACZ,YAAM,IAAIrD,OAAOwC,KAAX,CAAiB,eAAjB,EAAiC,6BAAjC,CAAN;AACA;;AAAA;AACD,QAAIG,QAAQS,OAAOjD,MAAP,CAAckD,QAAd,CAAZ;AACA,WAAOV,KAAP;AACA,GAba;;AAed,iBAAeqB,OAAf,EAAuB;AACtBtB,UAAMsB,OAAN,EAAcxD,MAAd;;AACA,QAAGwD,OAAH,EAAW;AACV,UAAIrB,QAAQS,OAAO/C,MAAP,CAAc2D,OAAd,CAAZ;AACA3B,cAAQC,GAAR,CAAa,iBAAgB0B,OAAQ,EAArC;AACA,aAAQ,iBAAgBA,OAAQ,EAAhC;AACA;;AAAA;AACD;;AAtBa,CAAf,E,CAyBA;AACA;AACA;AACA;AACA;AACA;AACA,iD;;;;;;;;;;;ACxCAxE,OAAOC,MAAP,CAAc;AAAC2D,UAAO,MAAIA;AAAZ,CAAd;AAAmC,IAAIzD,KAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,QAAMG,CAAN,EAAQ;AAACH,YAAMG,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,YAAJ;AAAiBP,OAAOI,KAAP,CAAaC,QAAQ,6BAAR,CAAb,EAAoD;AAACE,eAAaD,CAAb,EAAe;AAACC,mBAAaD,CAAb;AAAe;;AAAhC,CAApD,EAAsF,CAAtF;AAKnH,MAAMsD,SAAS,IAAIpD,OAAOC,UAAX,CAAsB,QAAtB,CAAf;AAEP;AACAmD,OAAOlD,IAAP,CAAY;AACVC,WAAS;AAAE,WAAO,IAAP;AAAc,GADf;;AAEVC,WAAS;AAAE,WAAO,IAAP;AAAc,GAFf;;AAGVC,WAAS;AAAE,WAAO,IAAP;AAAc;;AAHf,CAAZ;AAMA+C,OAAO9C,MAAP,GAAgB,IAAIP,YAAJ,CAAiB;AAC/B;AACA,cAAY;AACVQ,UAAMC,MADI;AAEVC,WAAO,UAFG;AAGVC,cAAU,KAHA;AAIVC,kBAAc,+BAJJ;AAKVC,WAAO,IALG;AAMVC,YAAQ;AANE,GAFmB;AAU/B,gBAAc;AACZN,UAAMC,MADM;AAEZC,WAAO,YAFK;AAGZC,cAAU,KAHE;AAIZC,kBAAc;AAJF,GAViB;AAgB/B,gBAAc;AACZJ,UAAMC,MADM;AAEZC,WAAO,YAFK;AAGZC,cAAU,KAHE;AAIZI,mBAAe,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,CAJH;AAKZH,kBAAc;AALF,GAhBiB;AAuB/B,sBAAoB;AAClBJ,UAAMC,MADY;AAElBC,WAAO,kBAFW;AAGlBC,cAAU,KAHQ;AAIlBC,kBAAc;AAJI,GAvBW;AA6B/B,eAAa;AACXJ,UAAMC,MADK;AAEXC,WAAO,WAFI;AAGXC,cAAU,IAHC;AAIXC,kBAAc;AAJH,GA7BkB;AAmC/B,mBAAiB;AACfJ,UAAMC,MADS;AAEfC,WAAO,eAFQ;AAGfC,cAAU;AAHK,GAnCc;AAwC/B,iBAAe;AACbH,UAAMC,MADO;AAEbC,WAAO,sBAFM;AAGbC,cAAU;AAHG,GAxCgB;AA6C/B,aAAW;AACTH,UAAMS,IADG;AAETP,WAAO,8BAFE;AAGTQ,eAAW,YAAW;AACpB,UAAK,KAAKC,QAAV,EAAqB;AACnB,eAAO,IAAIF,IAAJ,EAAP;AACD;AACF,KAPQ;AAQTN,cAAU;AARD,GA7CoB;AAuD/B,aAAW;AACTH,UAAMS,IADG;AAETP,WAAO,8BAFE;AAGTQ,eAAW,YAAW;AACpB,UAAK,KAAKE,QAAV,EAAqB;AACnB,eAAO,IAAIH,IAAJ,EAAP;AACD;AACF,KAPQ;AAQTN,cAAU;AARD;AAvDoB,CAAjB,CAAhB;AAmEA0C,OAAOhC,YAAP,CAAqBgC,OAAO9C,MAA5B;AAGA8C,OAAO/B,YAAP,GAAsB;AACpB4C,YAAU,CADU;AAEpBN,cAAY,CAFQ;AAGpBO,cAAY,CAHQ;AAIpBV,oBAAkB,CAJE;AAKpBI,aAAW,CALS;AAMpBO,iBAAe,CANK;AAOpBb,eAAa,CAPO;AAQpB5B,WAAS,CARW;AASpBC,WAAS;AATW,CAAtB,C,CAYA;AACA;AACA;AACA;AACA;AACA,M;;;;;;;;;;;ACrGA,IAAIC,cAAJ;AAAmBpC,OAAOI,KAAP,CAAaC,QAAQ,yBAAR,CAAb,EAAgD;AAAC+B,iBAAe9B,CAAf,EAAiB;AAAC8B,qBAAe9B,CAAf;AAAiB;;AAApC,CAAhD,EAAsF,CAAtF;AAAyF,IAAIsD,MAAJ;AAAW5D,OAAOI,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACuD,SAAOtD,CAAP,EAAS;AAACsD,aAAOtD,CAAP;AAAS;;AAApB,CAApC,EAA0D,CAA1D;AAKvHE,OAAO4C,OAAP,CAAe,YAAf,EAA6B,YAAW;AACvC;AACA;AACE;AACF,SAAOQ,OAAON,IAAP,CACN,EADM,EAEL;AACCC,UAAM;AAAErB,eAAS,CAAC;AAAZ;AADP,GAFK,EAKL;AACDsB,YAAQI,OAAO/B;AADd,GALK,CAAP;AAQA,CAZD,E,CAcA;;AACA,IAAI+C,wBAAwB;AAC1B7D,QAAM,cADoB;AAE1B2C,QAAM,YAFoB,CAI5B;;AAJ4B,CAA5B;AAKAtB,eAAeuB,OAAf,CAAuBiB,qBAAvB,EAA8C,CAA9C,EAAiD,IAAjD,E;;;;;;;;;;;ACzBA,IAAIxC,cAAJ;AAAmBpC,OAAOI,KAAP,CAAaC,QAAQ,yBAAR,CAAb,EAAgD;AAAC+B,iBAAe9B,CAAf,EAAiB;AAAC8B,qBAAe9B,CAAf;AAAiB;;AAApC,CAAhD,EAAsF,CAAtF;AAAyF,IAAI+B,GAAJ;AAAQrC,OAAOI,KAAP,CAAaC,QAAQ,SAAR,CAAb,EAAgC;AAACiC,UAAQhC,CAAR,EAAU;AAAC+B,UAAI/B,CAAJ;AAAM;;AAAlB,CAAhC,EAAoD,CAApD;AAAuD,IAAIuE,QAAJ;AAAa7E,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACwE,WAASvE,CAAT,EAAW;AAACuE,eAASvE,CAAT;AAAW;;AAAxB,CAAtC,EAAgE,CAAhE;AAKxL+B,IAAIE,MAAJ,CAAWC,MAAX,GAAoB,WAApB;AACA,IAAIC,cAAc,IAAIJ,IAAIK,WAAR,EAAlB;AAEAlC,OAAOmC,OAAP,CAAe;AACd,gBAAcmC,OAAd,EAAsB;AACrB;AACAjC,YAAQC,GAAR,CAAY,oBAAZ;AACA,QAAIiC,KAAK,IAAIvD,IAAJ,GAAWwD,OAAX,EAAT;AACA,QAAIC,WAAW,IAAIC,OAAOC,IAAX,CAAgBL,QAAQM,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAhB,EAAuC,QAAvC,CAAf;AACA,QAAIC,mBAAmB;AACtB,eAAS;AACR,iBAASJ;AADD,OADa;AAItB,uBAAiB;AAJK,KAAvB;AAMA,QAAIK,cAAc;AACjB,eAAS;AACR,iBAASL;AADD,OADQ;AAIjB,mBAAa,EAJI;AAKjB,uBAAiB;AALA,KAAlB;AAOA,QAAIM,aAAa;AAChB,eAAS;AACR,iBAASN;AADD,OADO;AAId,oBAAc,CAAC,KAAD;AAJA,KAAjB,CAlBqB,CAwBrB;;AACA,QAAIO,oBAAoB/C,YAAYgD,sBAAZ,CAAmCJ,gBAAnC,CAAxB;AACA,QAAIK,eAAejD,YAAYkD,YAAZ,CAAyBL,WAAzB,CAAnB;AACA,QAAIM,cAAcnD,YAAYoD,WAAZ,CAAwBN,UAAxB,CAAlB,CA3BqB,CA4BrB;;AACA,QAAIO,WAAWN,kBAAkBO,OAAlB,EAAf;AACA,QAAIC,WAAWN,aAAaK,OAAb,EAAf;AACA,QAAIE,WAAWL,YAAYG,OAAZ,EAAf,CA/BqB,CAgCrB;;AACA,QAAIG,WAAWC,QAAQC,GAAR,CAAY,CAC1BN,SAASO,KAAT,CAAeC,SAAS;AAAE,YAAM,IAAI9F,OAAOwC,KAAX,CAAiBsD,MAAMC,IAAvB,EAA6BD,MAAME,OAAnC,EAA4CF,KAA5C,CAAN;AAAyD,aAAOA,KAAP;AAAe,KAAlG,CAD0B,EAE1BN,SAASK,KAAT,CAAeC,SAAS;AAAE,YAAM,IAAI9F,OAAOwC,KAAX,CAAiBsD,MAAMC,IAAvB,EAA6BD,MAAME,OAAnC,EAA4CF,KAA5C,CAAN;AAAyD,aAAOA,KAAP;AAAe,KAAlG,CAF0B,EAG1BL,SAASI,KAAT,CAAeC,SAAS;AAAE,YAAM,IAAI9F,OAAOwC,KAAX,CAAiBsD,MAAMC,IAAvB,EAA6BD,MAAME,OAAnC,EAA4CF,KAA5C,CAAN;AAAyD,aAAOA,KAAP;AAAe,KAAlG,CAH0B,CAAZ,EAIZG,IAJY,CAIPC,UAAU;AACjB7D,cAAQC,GAAR,CAAY4D,OAAO,CAAP,CAAZ;AACA7D,cAAQC,GAAR,CAAY4D,OAAO,CAAP,CAAZ;AACA7D,cAAQC,GAAR,CAAY4D,OAAO,CAAP,CAAZ;AACA,UAAIC,KAAK,IAAInF,IAAJ,GAAWwD,OAAX,EAAT;AACAnC,cAAQC,GAAR,CAAa,iBAAgB6D,KAAK5B,EAAG,KAArC;AACA,UAAI6B,iBAAiB;AACpBC,oBAAYH,OAAO,CAAP,EAAUI,gBADF;AAEpBC,gBAAQL,OAAO,CAAP,EAAUM,MAFE;AAGpBC,qBAAaP,OAAO,CAAP,EAAUQ;AAHH,OAArB;AAKA,UAAIC,SAAS;AACZC,sBAActC,OADF;AAEZ8B,wBAAgBA;AAFJ,OAAb;AAIA,UAAIS,aAAaxC,SAASlE,MAAT,CAAgBwG,MAAhB,CAAjB;AACAtE,cAAQC,GAAR,CAAYuE,UAAZ;AACA,aAAOX,MAAP;AACA,KAtBc,EAsBZL,KAtBY,CAsBNC,SAAS;AACjBzD,cAAQC,GAAR,CAAY,eAAZ;AACAD,cAAQC,GAAR,CAAYwD,KAAZ;AACA,YAAM,IAAI9F,OAAOwC,KAAX,CAAiBsD,MAAMA,KAAvB,EAA8BA,MAAMgB,MAApC,EAA4ChB,MAAMiB,OAAlD,CAAN;AACA,KA1Bc,EA0BZC,OA1BY,CA0BJ,MAAM;AAChB3E,cAAQC,GAAR,CAAY,SAAZ;AACAD,cAAQC,GAAR,CAAY,IAAZ;AACA,KA7Bc,CAAf;AA8BAD,YAAQC,GAAR,CAAYoD,QAAZ;AACA,QAAIS,KAAK,IAAInF,IAAJ,GAAWwD,OAAX,EAAT;AACAnC,YAAQC,GAAR,CAAa,gBAAe6D,KAAK5B,EAAG,KAApC;AACA,WAAOmB,QAAP;AACA;;AApEa,CAAf,E,CAuEA;;AACA,IAAIuB,cAAc;AACjB1G,QAAM,QADW;AAEjB2C,QAAM;AAFW,CAAlB,C,CAIA;;AACAtB,eAAeuB,OAAf,CAAuB8D,WAAvB,EAAoC,CAApC,EAAuC,KAAvC,E;;;;;;;;;;;ACrFA,IAAIrF,cAAJ;AAAmBpC,OAAOI,KAAP,CAAaC,QAAQ,yBAAR,CAAb,EAAgD;AAAC+B,iBAAe9B,CAAf,EAAiB;AAAC8B,qBAAe9B,CAAf;AAAiB;;AAApC,CAAhD,EAAsF,CAAtF;AAAyF,IAAIuE,QAAJ;AAAa7E,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACwE,WAASvE,CAAT,EAAW;AAACuE,eAASvE,CAAT;AAAW;;AAAxB,CAAtC,EAAgE,CAAhE;AAKzHE,OAAO4C,OAAP,CAAe,cAAf,EAA+B,UAASsE,WAAS,EAAlB,EAAsB;AACpDxE,QAAMwE,QAAN,EAAe1G,MAAf;AACA0G,aAAWA,YAAY,EAAvB,CAFoD,CAGlD;;AACF,SAAO7C,SAASvB,IAAT,CACNoE,QADM,EAEL;AACCnE,UAAM;AAAErB,eAAS,CAAC;AAAZ;AADP,GAFK,EAKL;AACDsB,YAAQqB,SAAShD;AADhB,GALK,CAAP;AAQA,CAZD,E,CAcA;;AACA,IAAI8F,0BAA0B;AAC5B5G,QAAM,cADsB;AAE5B2C,QAAM,cAFsB,CAI9B;;AAJ8B,CAA9B;AAKAtB,eAAeuB,OAAf,CAAuBgE,uBAAvB,EAAgD,CAAhD,EAAmD,IAAnD,E;;;;;;;;;;;ACzBA3H,OAAOC,MAAP,CAAc;AAAC4E,YAAS,MAAIA;AAAd,CAAd;AAAuC,IAAI1E,KAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,QAAMG,CAAN,EAAQ;AAACH,YAAMG,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,YAAJ;AAAiBP,OAAOI,KAAP,CAAaC,QAAQ,6BAAR,CAAb,EAAoD;AAACE,eAAaD,CAAb,EAAe;AAACC,mBAAaD,CAAb;AAAe;;AAAhC,CAApD,EAAsF,CAAtF;AAKvH,MAAMuE,WAAW,IAAIrE,OAAOC,UAAX,CAAsB,UAAtB,CAAjB;AAEP;AACAoE,SAASnE,IAAT,CAAc;AACZC,WAAS;AAAE,WAAO,IAAP;AAAc,GADb;;AAEZC,WAAS;AAAE,WAAO,IAAP;AAAc,GAFb;;AAGZC,WAAS;AAAE,WAAO,IAAP;AAAc;;AAHb,CAAd;AAMAgE,SAAS/D,MAAT,GAAkB,IAAIP,YAAJ,CAAiB;AACjC;AACA,iBAAe;AACbQ,UAAM,CAACC,MAAD,CADO;AAEbC,WAAO,cAFM;AAGbC,cAAU,KAHG;AAIbI,mBAAe,CAAC,YAAD,EAAe,OAAf,EAAwB,MAAxB,EAAgC,YAAhC,CAJF;AAKbH,kBAAc,CAAC,YAAD,EAAe,OAAf,EAAwB,MAAxB;AALD,GAFkB;AASjC,wBAAsB;AACpBJ,UAAM,CAACC,MAAD,CADc;AAEpBC,WAAO,uBAFa;AAGpBC,cAAU,IAHU;AAIpBC,kBAAc,CAAC,EAAD;AAJM,GATW;AAejC,kBAAgB;AACdJ,UAAMC,MADQ;AAEdC,WAAO,iBAFO;AAGdC,cAAU,IAHI;AAIdC,kBAAc;AAJA,GAfiB;AAqBjC,oBAAkB;AAChBJ,UAAM6G,MADU;AAEhB3G,WAAO,wBAFS;AAGhBC,cAAU,IAHM;AAIhB2G,cAAU,IAJM;AAKhB1G,kBAAc;AALE,GArBe;AA4BjC,WAAS;AACPJ,UAAM,CAAC6G,MAAD,CADC;AAEP3G,WAAO,6BAFA;AAGPC,cAAU,IAHH;AAIP2G,cAAU,IAJH;AAKP1G,kBAAc;AALP,GA5BwB;AAmCjC,aAAW;AACTJ,UAAMS,IADG;AAETP,WAAO,uBAFE;AAGTQ,eAAW,YAAW;AACpB,UAAK,KAAKC,QAAV,EAAqB;AACnB,eAAO,IAAIF,IAAJ,EAAP;AACD;AACF,KAPQ;AAQTN,cAAU,IARD,CAST;;AATS,GAnCsB;AA8CjC,aAAW;AACTH,UAAMS,IADG;AAETP,WAAO,qBAFE;AAGTQ,eAAW,YAAW;AACpB,UAAK,KAAKE,QAAV,EAAqB;AACnB,eAAO,IAAIH,IAAJ,EAAP;AACD;AACF,KAPQ;AAQTN,cAAU;AARD;AA9CsB,CAAjB,CAAlB;AA0DA2D,SAASjD,YAAT,CAAuBiD,SAAS/D,MAAhC;;AAEA,IAAGN,OAAOsH,QAAV,EAAmB;AACjBtH,SAAOuH,OAAP,CAAe,MAAM;AACnBlD,aAASmD,YAAT,CAAsB;AAClB9F,eAAS,CAAC;AADQ,KAAtB,EADmB,CAInB;;AACD,GALD;AAMD;;AAED2C,SAAShD,YAAT,GAAwB;AACtBoG,aAAW,CADW;AAEtBC,eAAa,CAFS;AAGtBC,sBAAoB,CAHE;AAItBf,gBAAc,CAJQ;AAKtBR,kBAAgB,CALM;AAMtB1E,WAAS,CANa;AAOtBC,WAAS;AAPa,CAAxB,C,CAUA;AACA;AACA;AACA;AACA;AACA,M;;;;;;;;;;;AClGA,IAAI3B,MAAJ;AAAWR,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACG,SAAOF,CAAP,EAAS;AAACE,aAAOF,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIJ,WAAJ;AAAgBF,OAAOI,KAAP,CAAaC,QAAQ,sCAAR,CAAb,EAA6D;AAACH,cAAYI,CAAZ,EAAc;AAACJ,kBAAYI,CAAZ;AAAc;;AAA9B,CAA7D,EAA6F,CAA7F;AAAgG,IAAIsD,MAAJ;AAAW5D,OAAOI,KAAP,CAAaC,QAAQ,4BAAR,CAAb,EAAmD;AAACuD,SAAOtD,CAAP,EAAS;AAACsD,aAAOtD,CAAP;AAAS;;AAApB,CAAnD,EAAyE,CAAzE;AAA4E,IAAIuE,QAAJ;AAAa7E,OAAOI,KAAP,CAAaC,QAAQ,gCAAR,CAAb,EAAuD;AAACwE,WAASvE,CAAT,EAAW;AAACuE,eAASvE,CAAT;AAAW;;AAAxB,CAAvD,EAAiF,CAAjF;AAK9R;AAEAE,OAAOuH,OAAP,CAAe,MAAM;AACnB,MAAInE,OAAON,IAAP,GAAc8E,KAAd,KAAwB,EAA5B,EAAgC;AAC9BvF,YAAQC,GAAR,CAAY,mBAAZ;AACA,QAAIuF,aAAa,EAAjB;;AACAC,MAAEC,KAAF,CAAQ,CAAR,EAAW,MAAI;AACb,UAAIpF,QAAQ;AACVW,qBAAa,KAAKC,MAAL,IAAe,OADlB;AAEVC,0BAAkB,QAFR;AAGVG,oBAAYqE,MAAMC,OAAN,CAAcC,QAAd,GAAyBhF,IAH3B;AAIVe,kBAAU+D,MAAMG,MAAN,CAAaC,IAAb,EAJA;AAKVxE,mBAAWoE,MAAMK,KAAN,CAAYC,MAAZ;AALD,OAAZ;AAOA,UAAItE,UAAUZ,OAAOjD,MAAP,CAAcwC,KAAd,CAAd;AACAkF,iBAAWU,IAAX,CAAgBvE,OAAhB;AACD,KAVD;;AAWA3B,YAAQC,GAAR,CAAYuF,UAAZ;AAED;;AAAA;AACF,CAlBD,E;;;;;;;;;;;ACPA,IAAI7H,MAAJ;AAAWR,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACG,SAAOF,CAAP,EAAS;AAACE,aAAOF,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAI0I,IAAJ;AAAShJ,OAAOI,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAAC2I,OAAK1I,CAAL,EAAO;AAAC0I,WAAK1I,CAAL;AAAO;;AAAhB,CAApC,EAAsD,CAAtD;AAAyDN,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb;AAAuCL,OAAOI,KAAP,CAAaC,QAAQ,mBAAR,CAAb;;AAoBnL,MAAM4I,KAAK5I,QAAQ,IAAR,CAAX;;AAGA6I,cAAc1I,OAAO2I,YAAP,GAAsB,YAAtB,GAAqC,aAAnD;AACAtG,QAAQC,GAAR,CAAY,eAAeoG,WAAf,GAA6B,KAA7B,GAAqCE,KAAKC,SAAL,CAAe7I,OAAO8I,QAAtB,CAAjD;AAEA9I,OAAOmC,OAAP,CAAe;AAEd4G,SAAM;AACL,WAAQ,2BAA0BC,QAAQC,GAAR,CAAYC,KAAZ,IAAqB,KAAM,gBAAeT,GAAGU,QAAH,EAAc,EAA1F;AACA,GAJa;;AAMRC,SAAN;AAAA,oCAAe;AACd,UAAG;AACF,YAAI1D,WAAW,EAAf;AACA,cAAM2D,wBAAgBb,KAAKc,IAAL,CAAU,KAAV,EAAiB,2CAAjB,CAAhB,CAAN;AACAjH,gBAAQC,GAAR,CAAYsG,KAAKC,SAAL,CAAeQ,QAAQE,IAAR,CAAa,CAAb,CAAf,CAAZ;AACAlH,gBAAQC,GAAR,CAAYsG,KAAKC,SAAL,CAAeQ,QAAQG,OAAvB,CAAZ;AACA9D,iBAASK,IAAT,GAAgB,IAAhB;AACAL,iBAAS6D,IAAT,GAAgBF,OAAhB;AACA,OAPD,CAOE,OAAMI,CAAN,EAAQ;AACT/D,mBAAW,KAAX;AACArD,gBAAQC,GAAR,CAAYmH,CAAZ;AACA,OAVD,SAUU;AACTpH,gBAAQC,GAAR,CAAY,YAAZ,EADS,CAET;;AACA,eAAOoD,QAAP;AACA;AACD,KAhBD;AAAA;;AANc,CAAf;AA0BA1F,OAAO0J,YAAP,CAAqBC,UAAD,IAAc;AACjC,MAAIC,aAAaD,WAAWE,aAA5B;AACA,MAAIL,UAAUG,WAAWG,WAAzB;AACAzH,UAAQC,GAAR,CAAa,mBAAkBsH,UAAW,EAA1C,EAHiC,CAIjC;AACA,CALD,E;;;;;;;;;;;ACpDApK,OAAOI,KAAP,CAAaC,QAAQ,kCAAR,CAAb;AAA0DL,OAAOI,KAAP,CAAaC,QAAQ,uCAAR,CAAb;AAA+DL,OAAOI,KAAP,CAAaC,QAAQ,+BAAR,CAAb;AAAuDL,OAAOI,KAAP,CAAaC,QAAQ,oCAAR,CAAb;AAA4DL,OAAOI,KAAP,CAAaC,QAAQ,6BAAR,CAAb;AAAqDL,OAAOI,KAAP,CAAaC,QAAQ,kCAAR,CAAb,E;;;;;;;;;;;ACAjSL,OAAOI,KAAP,CAAaC,QAAQ,2BAAR,CAAb;AAcAG,OAAOuH,OAAP,CAAe,MAAM,CACnB;AACD,CAFD,E","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\n\n\nexport const Collections = new Meteor.Collection('collections');\n\n// Deny all client-side updates since we will be using methods to manage this collection\nCollections.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\nCollections.Schema = new SimpleSchema({\n  // Our schema rules will go here.\n  \"collection_id\": {\n    type: String,\n    label: \"Collection ID\",\n    optional: false,\n    defaultValue: \"Collection ID\",\n    index: true,\n    unique: true\n  },\n  \"collection_name\": {\n    type: String,\n    label: \"Collection Name\",\n    optional: false,\n    defaultValue: \"MyCollection\",\n    index: true\n  },\n  \"collection_type\": {\n    type: String,\n    label: \"Collection type\",\n    optional: false,\n    allowedValues: [\"face\", \"voice\"],\n    defaultValue: \"face\"\n  },\n  \"private\": {\n    type: Boolean,\n    label: \"Collection privacy\",\n    optional: false,\n    defaultValue: true\n  },\n  \"created\": {\n    type: Date,\n    label: \"Date collection added to Antennae\",\n    autoValue: function() {\n      if ( this.isInsert ) {\n        return new Date;\n      } \n    },\n    optional: true\n  },\n  \"updated\": {\n    type: Date,\n    label: \"Date collection updated in System\",\n    autoValue: function() {\n      if ( this.isUpdate ) {\n        return new Date;\n      } \n    },\n    optional: true\n  }\n});\n\nCollections.attachSchema( Collections.Schema ); \n\n\nCollections.publicFields = {\n  collection_id: 1,\n  collection_name: 1,\n  collection_type: 1,\n  private: 1,\n  created: 1,\n  updated: 1\n};\n\n// Collections.helpers({\n//   // A collections is considered to be private if \"private\" is set to true\n//   isPrivate() {\n//     return this.private;\n//   }\n// });","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport AWS from 'aws-sdk';\n\nimport { Collections } from './collections.js';\n\nAWS.config.region = 'us-east-1';\nvar rekognition = new AWS.Rekognition();\n\nMeteor.methods({\n\t\"collection.save\"(newCol){\n\t\tconsole.log(newCol);\n\t\tlet col = Collections.insert(newCol);\n\t\tif(col){\n\t\t\tconsole.log(`added collection: ${col}`);\n\t\t}else{\n            console.log(newCol);\n            throw new Meteor.Error('add-collection-error',`error adding collection: ${newCol}`)\t\t\n\t\t}\n\t\treturn `added collection: ${col}`;\n\t},\n\n\t\"collection.delete\"(colId){\n\t\tcheck(colId,String);\n\t\tif(colId){\n\t\t\tlet print = Collections.remove(colId);\n\t\t\tconsole.log(`deleted collection: ${colId}`);\n\t\t\treturn `deleted collection: ${colId}`;\n\t\t};\n\t}\n})\n\n// Define a rule to limit method calls\n// let runScanRule = {\n// \ttype: 'method',\n// \tname: 'moment.scan'\n// };\n// Add the rule, allowing up to 1 scan every 10 seconds\n// DDPRateLimiter.addRule(runScanRule, 1, 10000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\n\nimport { Collections } from './collections.js';\n\n\nMeteor.publish('collections.get', function(collectionId='') {\n\tcheck(collectionId,String);\n\tcollectionId = collectionId || {};\n  \t// console.log(Collections.find(collectionId).count());\n\treturn Collections.find(\n\t\tcollectionId, \n\t  { \n\t  \tsort: { created: -1 } \n\t}\n\t, {\n\t\tfields: Collections.publicFields\n\t});\n});\n\n// Define a rule to limit subscription calls\nvar subscribeToCollectionsRule = {\n  type: 'subscription',\n  name: 'collections.get'\n}\n// Add the rule, allowing up to 1 subscription every 5 seconds.\nDDPRateLimiter.addRule(subscribeToCollectionsRule, 1, 5000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport AWS from 'aws-sdk';\n\nimport { Collections } from '../collections/collections.js';\nimport { Prints } from './prints.js';\n\nAWS.config.region = 'us-east-1';\nvar rekognition = new AWS.Rekognition();\n\nMeteor.methods({\n\t\"print.save\"(newPrint){\n\t\tnewPrint.print_adder = this.userId || \"null\";\n\t\tnewPrint.print_collection = Collections.findOne(newPrint.collection) || \"people\";\n\t\tnewPrint.print_name = newPrint.name;\n\t\tnewPrint.print_img = newPrint.img;\n\t\t// console.log(newPrint);\n\t\tPrints.simpleSchema().clean(newPrint);\n\t\tif(!newPrint){\n\t\t\tthrow new Meteor.Error('invalid-print','submitted print is invalid!');\n\t\t};\n\t\tlet print = Prints.insert(newPrint);\n\t\treturn print;\n\t},\n\n\t\"print.delete\"(printId){\n\t\tcheck(printId,String);\n\t\tif(printId){\n\t\t\tlet print = Prints.remove(printId);\n\t\t\tconsole.log(`deleted face: ${printId}`);\n\t\t\treturn `deleted face: ${printId}`;\n\t\t};\n\t}\n})\n\n// Define a rule to limit method calls\n// let runScanRule = {\n// \ttype: 'method',\n// \tname: 'print.save'\n// };\n// Add the rule, allowing up to 1 scan every 10 seconds\n// DDPRateLimiter.addRule(runScanRule, 1, 10000);","import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\n\n\nexport const Prints = new Meteor.Collection('prints');\n\n// Deny all client-side updates since we will be using methods to manage this collection\nPrints.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\nPrints.Schema = new SimpleSchema({\n  // Our schema rules will go here.\n  \"print_id\": {\n    type: String,\n    label: \"Print ID\",\n    optional: false,\n    defaultValue: \"AAAA-BBBB-CCCC-1111-2222-3333\",\n    index: true,\n    unique: true\n  },\n  \"print_name\": {\n    type: String,\n    label: \"Print Name\",\n    optional: false,\n    defaultValue: \"New Person\"\n  },\n  \"print_type\": {\n    type: String,\n    label: \"Print type\",\n    optional: false,\n    allowedValues: [\"face\", \"voice\", \"finger\"],\n    defaultValue: \"face\"\n  },\n  \"print_collection\": {\n    type: String,\n    label: \"Print collection\",\n    optional: false,\n    defaultValue: \"people\"\n  },\n  \"print_img\": {\n    type: String,\n    label: \"Print img\",\n    optional: true,\n    defaultValue: \"img/face-id-100.png\"\n  },\n  \"print_details\": {\n    type: String,\n    label: \"Print details\",\n    optional: true\n  },\n  \"print_adder\": {\n    type: String,\n    label: \"User who added print\",\n    optional: false\n  },\n  \"created\": {\n    type: Date,\n    label: \"Date print added to Antennae\",\n    autoValue: function() {\n      if ( this.isInsert ) {\n        return new Date;\n      } \n    },\n    optional: true\n  },\n  \"updated\": {\n    type: Date,\n    label: \"Date print updated in System\",\n    autoValue: function() {\n      if ( this.isUpdate ) {\n        return new Date;\n      } \n    },\n    optional: true\n  }\n});\n\nPrints.attachSchema( Prints.Schema ); \n\n\nPrints.publicFields = {\n  print_id: 1,\n  print_name: 1,\n  print_type: 1,\n  print_collection: 1,\n  print_img: 1,\n  print_details: 1,\n  print_adder: 1,\n  created: 1,\n  updated: 1\n};\n\n// Prints.helpers({\n//   // A collections is considered to be private if \"private\" is set to true\n//   isPrivate() {\n//     return this.private;\n//   }\n// });","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\n\nimport { Prints } from './prints.js';\n\n\nMeteor.publish('prints.get', function() {\n\t// check(collectionId,String);\n\t// collectionId = collectionId || {};\n  \t// console.log(Collections.find(collectionId).count());\n\treturn Prints.find(\n\t\t{}, \n\t  { \n\t  \tsort: { created: -1 } \n\t}\n\t, {\n\t\tfields: Prints.publicFields\n\t});\n});\n\n// Define a rule to limit subscription calls\nvar subscribeToPrintsRule = {\n  type: 'subscription',\n  name: 'prints.get'\n}\n// Add the rule, allowing up to 1 subscription every 5 seconds.\nDDPRateLimiter.addRule(subscribeToPrintsRule, 1, 5000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport AWS from 'aws-sdk';\n\nimport { Searches } from './searches.js';\n\nAWS.config.region = 'us-east-1';\nvar rekognition = new AWS.Rekognition();\n\nMeteor.methods({\n\t\"search.face\"(picData){\n\t\t//return 1;\n\t\tconsole.log(\"ANALYZING IMAGE...\");\n\t\tvar t0 = new Date().getTime();\n\t\tlet imgBytes = new Buffer.from(picData.split(\",\")[1], \"base64\");\n\t\tlet moderationParams = {\n\t\t\t\"Image\": { \n\t\t\t\t\"Bytes\": imgBytes,\n\t\t\t},\n\t\t\t\"MinConfidence\": 50,\n\t\t};\n\t\tlet labelParams = {\n\t\t\t\"Image\": { \n\t\t\t\t\"Bytes\": imgBytes,\n\t\t\t},\n\t\t\t\"MaxLabels\": 20,\n\t\t\t\"MinConfidence\": 75,\n\t\t};\n\t\tlet faceParams = {\n\t\t\t\"Image\": { \n\t\t\t\t\"Bytes\": imgBytes,\n\t\t\t},\n  \t\t\t\"Attributes\": [\"ALL\"],\n\t\t};\n\t\t// create request objects\n\t\tlet moderationRequest = rekognition.detectModerationLabels(moderationParams);\n\t\tlet labelRequest = rekognition.detectLabels(labelParams);\n\t\tlet faceRequest = rekognition.detectFaces(faceParams);\n\t\t// create promises\n\t\tlet promise1 = moderationRequest.promise();\n\t\tlet promise2 = labelRequest.promise();\n\t\tlet promise3 = faceRequest.promise();\n\t\t// Fulfill promises in parallel\n\t\tlet response = Promise.all([\n\t\t\tpromise1.catch(error => { throw new Meteor.Error(error.code, error.message, error);return error; }),\n\t\t\tpromise2.catch(error => { throw new Meteor.Error(error.code, error.message, error);return error; }),\n\t\t\tpromise3.catch(error => { throw new Meteor.Error(error.code, error.message, error);return error; }),\n\t\t]).then(values => {\n\t\t\tconsole.log(values[0]);\n\t\t\tconsole.log(values[1]);\n\t\t\tconsole.log(values[2]);\n\t\t\tlet t1 = new Date().getTime();\n\t\t\tconsole.log(`Response took ${t1 - t0} ms`);\n\t\t\tlet search_results = {\n\t\t\t\tmoderation: values[0].ModerationLabels,\n\t\t\t\tlabels: values[1].Labels,\n\t\t\t\tfaceDetails: values[2].FaceDetails\n\t\t\t};\n\t\t\tlet search = {\n\t\t\t\tsearch_image: picData,\n\t\t\t\tsearch_results: search_results\n\t\t\t};\n\t\t\tlet saveSearch = Searches.insert(search);\n\t\t\tconsole.log(saveSearch);\n\t\t\treturn values;\n\t\t}).catch(error => {\n\t\t\tconsole.log('caught error!');\n\t\t\tconsole.log(error);\n\t\t\tthrow new Meteor.Error(error.error, error.reason, error.details);\n\t\t}).finally(() => {\n\t\t\tconsole.log('finally');\n\t\t\tconsole.log(this);\n\t\t});\n\t\tconsole.log(response);\n\t\tlet t1 = new Date().getTime();\n\t\tconsole.log(`Request took ${t1 - t0} ms`);\n\t\treturn response;\n\t}\n})\n\n// Define a rule to limit method calls\nlet runScanRule = {\n\ttype: 'method',\n\tname: 'moment.scan'\n};\n// Add the rule, allowing up to 1 scan every 10 seconds\nDDPRateLimiter.addRule(runScanRule, 1, 10000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\n\nimport { Searches } from './searches.js';\n\n\nMeteor.publish('searches.get', function(searchId='') {\n\tcheck(searchId,String);\n\tsearchId = searchId || {};\n  \t// console.log(Searches.find(searchId).count());\n\treturn Searches.find(\n\t\tsearchId, \n\t  { \n\t  \tsort: { created: -1 } \n\t}\n\t, {\n\t\tfields: Searches.publicFields\n\t});\n});\n\n// Define a rule to limit subscription calls\nvar subscribeToSearchesRule = {\n  type: 'subscription',\n  name: 'searches.get'\n}\n// Add the rule, allowing up to 1 subscription every 5 seconds.\nDDPRateLimiter.addRule(subscribeToSearchesRule, 1, 5000);","import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\n\n\nexport const Searches = new Meteor.Collection('searches');\n\n// Deny all client-side updates since we will be using methods to manage this collection\nSearches.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\nSearches.Schema = new SimpleSchema({\n  // schema rules\n  \"search_type\": {\n    type: [String],\n    label: \"Search types\",\n    optional: false,\n    allowedValues: [\"moderation\", \"label\", \"face\", \"collection\"],\n    defaultValue: [\"moderation\", \"label\", \"face\"]\n  },\n  \"search_collections\": {\n    type: [String],\n    label: \"Collections to search\",\n    optional: true,\n    defaultValue: [\"\"]\n  },\n  \"search_image\": {\n    type: String,\n    label: \"Image to search\",\n    optional: true,\n    defaultValue: \"\"\n  },\n  \"search_results\": {\n    type: Object,\n    label: \"Object of search types\",\n    optional: true,\n    blackbox: true,\n    defaultValue: {}\n  },\n  \"faces\": {\n    type: [Object],\n    label: \"Face objects found in image\",\n    optional: true,\n    blackbox: true,\n    defaultValue: []\n  },\n  \"created\": {\n    type: Date,\n    label: \"Date search performed\",\n    autoValue: function() {\n      if ( this.isInsert ) {\n        return new Date;\n      } \n    },\n    optional: true,\n    //index: true\n  },\n  \"updated\": {\n    type: Date,\n    label: \"Date search updated\",\n    autoValue: function() {\n      if ( this.isUpdate ) {\n        return new Date;\n      } \n    },\n    optional: true\n  }\n});\n\nSearches.attachSchema( Searches.Schema );\n\nif(Meteor.isServer){\n  Meteor.startup(() => {\n    Searches._ensureIndex({\n        created: -1,\n    });\n    // Searches._ensureIndex({ search_image: 1});\n  });\n}\n\nSearches.publicFields = {\n  search_id: 1,\n  search_type: 1,\n  search_collections: 1,\n  search_image: 1,\n  search_results: 1,\n  created: 1,\n  updated: 1\n};\n\n// Searches.helpers({\n//   // A collections is considered to be private if \"private\" is set to true\n//   isPrivate() {\n//     return this.private;\n//   }\n// });","import { Meteor } from 'meteor/meteor';\nimport { Collections } from '../../api/collections/collections.js';\nimport { Prints } from '../../api/prints/prints.js';\nimport { Searches } from '../../api/searches/searches.js';\n\n// if the database is empty on server start, create some sample data.\n\nMeteor.startup(() => {\n  if (Prints.find().count() < 15) {\n    console.log(\"seeding prints...\");\n    let seedPrints = []\n    _.times(5, ()=>{\n      let print = {\n        print_adder: this.userId || \"deded\",\n        print_collection: \"people\",\n        print_name: faker.helpers.userCard().name,\n        print_id: faker.random.uuid(),\n        print_img: faker.image.avatar()\n      };\n      let printId = Prints.insert(print);\n      seedPrints.push(printId);\n    });\n    console.log(seedPrints);\n\n  };\n});","/*\n * Copyright 2017-present Antmounds.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the GNU Affero General Public License, version 3.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     https://www.gnu.org/licenses/agpl-3.0.en.html\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\n// import '../accounts-config.js';\nimport './fixtures.js';\n// This defines all the collections, publications and methods that the application provides\n// as an API to the client.\nimport './register-api.js';\n\nconst os = require('os');\n\n\nserver_mode = Meteor.isProduction ? \"PRODUCTION\" : \"DEVELOPMENT\";\nconsole.log('index.js: ' + server_mode + \"-->\" + JSON.stringify(Meteor.settings));\n\nMeteor.methods({\n\n\tinfo(){\n\t\treturn `version: 0.9.0 - build: ${process.env.BUILD || 'dev'} - hostname: ${os.hostname()}`;\n\t},\n\n\tasync getData(){    \n\t\ttry{\n\t\t\tvar response = {};\n\t\t\tconst results = await HTTP.call('GET', 'http://jsonplaceholder.typicode.com/posts');\t\n\t\t\tconsole.log(JSON.stringify(results.data[0]));\t\n\t\t\tconsole.log(JSON.stringify(results.headers));\n\t\t\tresponse.code = true;\t\t\n\t\t\tresponse.data = results;\t\n\t\t} catch(e){\n\t\t\tresponse = false;\n\t\t\tconsole.log(e);\n\t\t} finally {\n\t\t\tconsole.log(\"finally...\")\n\t\t\t//throw new Meteor.Error(\"inappropriate-pic\",\"The user has taken an inappropriate picture.\");\t\n\t\t\treturn response;\n\t\t}\n\t}\n\n});\n\nMeteor.onConnection((connection)=>{\n\tlet clientAddr = connection.clientAddress;\n\tlet headers = connection.httpHeaders;\n\tconsole.log(`connection from ${clientAddr}`);\n\t// console.log(headers);\n})","import '../../api/collections/methods.js';\nimport '../../api/collections/publications.js';\nimport '../../api/searches/methods.js';\nimport '../../api/searches/publications.js';\nimport '../../api/prints/methods.js';\nimport '../../api/prints/publications.js';","/*\n * Copyright 2017-present Antmounds.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the GNU Affero General Public License, version 3.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     https://www.gnu.org/licenses/agpl-3.0.en.html\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport '../imports/startup/server';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}