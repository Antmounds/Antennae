{"version":3,"sources":["meteor://ðŸ’»app/imports/api/collections/collections.js","meteor://ðŸ’»app/imports/api/collections/methods.js","meteor://ðŸ’»app/imports/api/collections/publications.js","meteor://ðŸ’»app/imports/api/prints/methods.js","meteor://ðŸ’»app/imports/api/prints/prints.js","meteor://ðŸ’»app/imports/api/prints/publications.js","meteor://ðŸ’»app/imports/api/searches/methods.js","meteor://ðŸ’»app/imports/api/searches/publications.js","meteor://ðŸ’»app/imports/api/searches/searches.js","meteor://ðŸ’»app/imports/startup/server/fixtures.js","meteor://ðŸ’»app/imports/startup/server/index.js","meteor://ðŸ’»app/imports/startup/server/register-api.js","meteor://ðŸ’»app/imports/startup/accounts-config.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","Collections","Mongo","link","v","SimpleSchema","Meteor","Collection","deny","insert","update","remove","Schema","type","String","label","optional","defaultValue","index","unique","allowedValues","Number","Boolean","Date","autoValue","isInsert","isUpdate","attachSchema","publicFields","collection_id","collection_name","collection_type","print_count","private","created","updated","DDPRateLimiter","AWS","default","config","region","rekognition","Rekognition","methods","newCol","check","replace","console","log","collectionParams","CollectionId","collectionRequest","createCollection","promise","catch","error","Error","code","message","then","values","col","colId","findOne","params","deleteCollection","oldCol","_id","publish","collectionId","find","sort","fields","subscribeToCollectionsRule","name","addRule","Prints","newPrint","collection","print_adder","userId","print_collection_id","print_name","print_img","img","simpleSchema","clean","faceParams","ExternalImageId","Image","Buffer","from","split","DetectionAttributes","faceRequest","indexFaces","indexFace","result","print_id","FaceRecords","Face","FaceId","print","printId","FaceIds","printRequest","deleteFaces","oldPrint","deletePrintRule","Object","blackbox","print_type","print_details","selector","subscribeToPrintsRule","Random","Searches","s3","S3","dashboardStats","collections","count","faces","searches","matches","$ne","matchPercent","Math","round","searchData","user","matchThreshold","t0","getTime","imgBytes","imgFileName","id","uploadBucket","s3Params","ACL","Body","Bucket","ContentEncoding","ContentType","Key","Metadata","Tagging","s3Results","putObject","value","Expires","s3SignedUrl","getSignedUrl","colIds","fetch","moderationParams","labelParams","celebrityParams","moderationRequest","detectModerationLabels","labelRequest","detectLabels","detectFaces","celebrityRequest","recognizeCelebrities","allPromises","push","_","each","rekognitionParams","rekognitionRequest","searchFacesByImage","response","Promise","all","JSON","stringify","i","persons","FaceMatches","tag","image_id","face_id","similarity","Similarity","t1","search_results","moderation","ModerationLabels","labels","Labels","faceDetails","FaceDetails","celebrity","CelebrityFaces","url","search","search_image","station_name","stationName","saveSearch","reason","details","finally","searchId","runScanRule","subscribeToSearchesRule","isServer","startup","_ensureIndex","search_type","search_collections","colParams","colRequest","listCollections","cols","CollectionIds","length","awsCol","colResults","describeCollection","FaceCount","existingCol","upsert","$set","listFaces","Faces","face","awsFace","ImageId","existingFace","HTTP","os","require","server_mode","isProduction","info","process","env","VERSION","RELEASE","BUILD","hostname","getCode","settings","key","getData","results","call","data","headers","e","onConnection","connection","clientAddr","clientAddress","httpHeaders","Accounts","AccountsCommon","AccountsClient","isClient","ui","passwordSignupFields","onCreateUser","options"],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\n\n\nexport const Collections = new Meteor.Collection('collections');\n\n// Deny all client-side updates since we will be using methods to manage this collection\nCollections.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\nCollections.Schema = new SimpleSchema({\n  // Our schema rules will go here.\n  \"collection_id\": {\n    type: String,\n    label: \"Collection ID\",\n    optional: false,\n    defaultValue: \"My_Collection\",\n    index: true,\n    unique: true\n  },\n  \"collection_name\": {\n    type: String,\n    label: \"Collection Name\",\n    optional: false,\n    defaultValue: \"My Collection\",\n    index: true\n  },\n  \"collection_type\": {\n    type: String,\n    label: \"Collection type\",\n    optional: false,\n    allowedValues: [\"face\", \"voice\"],\n    defaultValue: \"face\"\n  },\n  \"print_count\": {\n    type: Number,\n    label: \"Print count\",\n    optional: true,\n    defaultValue: 0\n  },\n  \"private\": {\n    type: Boolean,\n    label: \"Collection privacy\",\n    optional: true,\n    defaultValue: true\n  },\n  \"created\": {\n    type: Date,\n    label: \"Date collection added to Antennae\",\n    autoValue: function() {\n      if ( this.isInsert ) {\n        return new Date;\n      } \n    },\n    optional: true\n  },\n  \"updated\": {\n    type: Date,\n    label: \"Date collection updated in System\",\n    autoValue: function() {\n      if ( this.isUpdate ) {\n        return new Date;\n      } \n    },\n    optional: true\n  }\n});\n\nCollections.attachSchema( Collections.Schema ); \n\n\nCollections.publicFields = {\n  collection_id: 1,\n  collection_name: 1,\n  collection_type: 1,\n  print_count: 1,\n  private: 1,\n  created: 1,\n  updated: 1\n};\n\n// Collections.helpers({\n//   // A collections is considered to be private if \"private\" is set to true\n//   isPrivate() {\n//     return this.private;\n//   }\n// });","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport AWS from 'aws-sdk';\n\nimport { Collections } from './collections.js';\n\nAWS.config.region = 'us-east-1';\nvar rekognition = new AWS.Rekognition();\n\nMeteor.methods({\n\t\"collection.save\"(newCol){\n\t\tcheck(newCol.collection_name, String);\n\t\tnewCol.collection_id = newCol.collection_name.replace(/ /g,\"__\");\n\t\tnewCol.private = true;\n\t\tconsole.log(newCol);\n\t\tlet collectionParams = {\n  \t\t\tCollectionId: newCol.collection_id\n\t\t};\n\t\tlet collectionRequest = rekognition.createCollection(collectionParams).promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; });\n\t\tcollectionRequest.then(values => {return values});\n\t\tlet col = Collections.insert(newCol);\n\t\tif(col){\n\t\t\tconsole.log(`added collection: ${col}`);\n\t\t}else{\n            console.log(newCol);\n            throw new Meteor.Error('add-collection-error',`error adding collection: ${newCol}`)\t\t\n\t\t}\n\t\treturn `added collection: ${col}`;\n\t},\n\n\t\"collection.delete\"(colId){\n\t\tcheck(colId,String);\n\t\tlet col = Collections.findOne(colId);\n\t\tconsole.log(col);\n\t\tif(!col){\n\t\t\tthrow new Meteor.Error('no-collection','No collection found with given id!');\n\t\t}else{\n\t\t\tlet params = {\n\t\t\t\tCollectionId: col.collection_id\n\t\t\t};\n\t\t\tlet collectionRequest = rekognition.deleteCollection(params).promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; });\n\t\t\tcollectionRequest.then(values => {return values});\n\t\t\tlet oldCol = Collections.remove(col._id);\n\t\t\tif(oldCol){\n\t\t\t\tconsole.log(`removed collection: ${oldCol}`);\n\t\t\t}else{\n\t            console.log(colId);\n\t            throw new Meteor.Error('remove-collection-error',`error removing collection: ${colId}`)\t\t\n\t\t\t};\n\t\t\treturn `removed collection: ${colId}`;\n\t\t\t\t// let print = Collections.remove(colId);\n\t\t\t\t// console.log(`deleted collection: ${colId}`);\n\t\t\t\t// return `deleted collection: ${colId}`;\n\t\t};\n\t}\n})\n\n// Define a rule to limit method calls\n// let runScanRule = {\n// \ttype: 'method',\n// \tname: 'moment.scan'\n// };\n// Add the rule, allowing up to 1 scan every 10 seconds\n// DDPRateLimiter.addRule(runScanRule, 1, 10000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\n\nimport { Collections } from './collections.js';\n\n\nMeteor.publish('collections.get', function(collectionId='') {\n\tcheck(collectionId,String);\n\tcollectionId = collectionId || {};\n  \t// console.log(Collections.find(collectionId).count());\n\treturn Collections.find(\n\t\tcollectionId, \n\t  { \n\t  \tsort: { created: -1 } \n\t}\n\t, {\n\t\tfields: Collections.publicFields\n\t});\n});\n\n// Define a rule to limit subscription calls\nvar subscribeToCollectionsRule = {\n  type: 'subscription',\n  name: 'collections.get'\n}\n// Add the rule, allowing up to 1 subscription every 5 seconds.\nDDPRateLimiter.addRule(subscribeToCollectionsRule, 1, 5000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport AWS from 'aws-sdk';\n\nimport { Collections } from '../collections/collections.js';\nimport { Prints } from './prints.js';\n\nAWS.config.region = 'us-east-1';\nvar rekognition = new AWS.Rekognition();\n\nMeteor.methods({\n\t\"print.save\"(newPrint){\n\t\tlet col = Collections.findOne(newPrint.collection);\n\t\tconsole.log(col);\n\t\tif(!col){\n\t\t\tthrow new Meteor.Error('no-collection','No collection found with given id!');\n\t\t};\n\t\tnewPrint.print_adder = this.userId || null;\n\t\tnewPrint.print_collection_id = col._id || null;\n\t\tnewPrint.print_name = newPrint.name.replace(/ /g,\"__\");\n\t\tnewPrint.print_img = newPrint.img;\n\t\t// console.log(newPrint);\n\t\tif(!newPrint){\n\t\t\tthrow new Meteor.Error('invalid-print','submitted print is invalid!');\n\t\t};\n\t\tPrints.simpleSchema().clean(newPrint);\n        // index a face into a collection\n        let faceParams = {\n          CollectionId: col.collection_id,\n          ExternalImageId: newPrint.print_name,\n\t\t  Image: { \n\t\t\t\"Bytes\": new Buffer.from(newPrint.print_img.split(\",\")[1], \"base64\"),\n\t\t  },\n          DetectionAttributes: [\"ALL\"]\n        };\n        console.log(1);\n        let faceRequest = rekognition.indexFaces(faceParams);\n        let promise = faceRequest.promise();\n        let indexFace = promise.then(result => {\n        \t// console.log(result);\n        \tnewPrint.print_id = result.FaceRecords[0].Face.FaceId;\n\t\t\tlet print = Prints.insert(newPrint);\n        \tconsole.log(`inserted: ${print}`);\n        \treturn result;\n        }).catch(error => {\n        \tthrow new Meteor.Error(error.code, error.message, error);\n        \treturn error;\n        });\n\t\treturn indexFace;\n\t},\n\n\t\"print.delete\"(printId){\n\t\tcheck(printId,String);\n\t\tlet print = Prints.findOne(printId);\n\t\tlet col = Collections.findOne(print.print_collection_id);\n\t\tconsole.log(print);\n\t\tif(!print){\n\t\t\tthrow new Meteor.Error('no-print','No print found with given id!');\n\t\t}else{\n\t\t\tlet params = {\n\t\t\t\tCollectionId: col.collection_id, \n\t\t\t\tFaceIds: [\n\t\t\t\t\tprint.print_id\n\t\t\t\t]\n\t\t\t};\n\t\t\tlet printRequest = rekognition.deleteFaces(params).promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; });\n\t\t\tprintRequest.then(values => {\n\t\t\t\tlet oldPrint = Prints.remove(print._id);\n\t\t\t\tif(oldPrint){\n\t\t\t\t\tconsole.log(`deleted face: ${printId}`);\n\t\t\t\t}else{\n\t\t            console.log(printId);\n\t\t            throw new Meteor.Error('remove-print-error',`error removing print: ${printId}`)\t\t\n\t\t\t\t};\n\t\t\t\treturn values\n\t\t\t});\n\t\t\treturn `removed print: ${printId}`;\n\t\t};\n\t},\n})\n\n// Define a rule to limit method calls\nlet deletePrintRule = {\n\ttype: 'method',\n\tname: 'print.delete'\n};\n// Add the rule, allowing up to 1 scan every 1 seconds\nDDPRateLimiter.addRule(deletePrintRule, 1, 1000);","import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\n\n\nexport const Prints = new Meteor.Collection('prints');\n\n// Deny all client-side updates since we will be using methods to manage this collection\nPrints.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\nPrints.Schema = new SimpleSchema({\n  // Our schema rules will go here.\n  \"print_id\": {\n    type: String,\n    label: \"Print ID\",\n    optional: false,\n    defaultValue: \"AAAA-BBBB-CCCC-1111-2222-3333\",\n    index: true,\n    unique: true\n  },\n  \"print_name\": {\n    type: String,\n    label: \"Print Name\",\n    optional: false,\n    defaultValue: \"New Person\"\n  },\n  \"print_type\": {\n    type: String,\n    label: \"Print type\",\n    optional: false,\n    allowedValues: [\"face\", \"voice\", \"finger\"],\n    defaultValue: \"face\"\n  },\n  \"print_collection_id\": {\n    type: String,\n    label: \"Print collection mongo _id\",\n    optional: false,\n    defaultValue: \"people\"\n  },\n  \"print_img\": {\n    type: String,\n    label: \"Print img\",\n    optional: true,\n    defaultValue: \"/img/face-id-100.png\"\n  },\n  \"print_details\": {\n    type: Object,\n    label: \"Print details\",\n    optional: true,\n    blackbox: true\n  },\n  \"print_adder\": {\n    type: String,\n    label: \"User who added print\",\n    optional: false\n  },\n  \"created\": {\n    type: Date,\n    label: \"Date print added to Antennae\",\n    autoValue: function() {\n      if ( this.isInsert ) {\n        return new Date;\n      } \n    },\n    optional: true\n  },\n  \"updated\": {\n    type: Date,\n    label: \"Date print updated in System\",\n    autoValue: function() {\n      if ( this.isUpdate ) {\n        return new Date;\n      } \n    },\n    optional: true\n  }\n});\n\nPrints.attachSchema( Prints.Schema ); \n\n\nPrints.publicFields = {\n  print_id: 1,\n  print_name: 1,\n  print_type: 1,\n  print_collection_id: 1,\n  print_img: 1,\n  print_details: 1,\n  print_adder: 1,\n  created: 1,\n  updated: 1\n};\n\n// Prints.helpers({\n//   // A collections is considered to be private if \"private\" is set to true\n//   isPrivate() {\n//     return this.private;\n//   }\n// });","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\n\nimport { Prints } from './prints.js';\n\n\nMeteor.publish('prints.get', function(collectionId) {\n\tcollectionId = collectionId || \"\";\n\tcheck(collectionId,String);\n\tlet selector = collectionId ? {print_collection_id: collectionId} : {};\n  \tconsole.log(selector);\n\treturn Prints.find(\n\t\tselector, \n\t  { \n\t  \tsort: { created: -1 } \n\t}\n\t, {\n\t\tfields: Prints.publicFields\n\t});\n});\n\n// Define a rule to limit subscription calls\nvar subscribeToPrintsRule = {\n  type: 'subscription',\n  name: 'prints.get'\n}\n// Add the rule, allowing up to 1 subscription every 5 seconds.\nDDPRateLimiter.addRule(subscribeToPrintsRule, 1, 5000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport AWS from 'aws-sdk';\nimport { Random } from 'meteor/random';\n\nimport { Collections } from '../collections/collections.js';\nimport { Prints } from '../prints/prints.js';\nimport { Searches } from './searches.js';\n\nAWS.config.region = 'us-east-1';\nvar rekognition = new AWS.Rekognition();\nvar s3 = new AWS.S3();\n\nMeteor.methods({\n\t\"getDashboardStats\"(){\n\t\tlet dashboardStats = {};\n\t\tdashboardStats.collections = Collections.find({}).count();\n\t\tdashboardStats.faces = Prints.find().count();\n\t\t// dashboardStats.faces = Collections.aggregate(\n\t\t// \t   [\n\t\t// \t     {\n\t\t// \t       $group:\n\t\t// \t\t\t{\n\t\t// \t\t\t\t_id: \"$collection_id\",\n\t\t// \t\t\t\t// face_count: { $sum: \"$print_count\" },\n\t\t// \t\t\t\tcount: { $sum: 1 }\n\t\t// \t\t\t}\n\t\t// \t     },\n\t\t// \t     {\n\t\t// \t     \t$project:\n\t\t// \t     \t{\n\t\t// \t     \t\t_id: 1,\n\t\t// \t     \t\tcount: 1\n\t\t// \t     \t}\n\t\t// \t     }\n\t\t// \t   ]\n\t\t// \t);\n\t\tdashboardStats.searches = Searches.find({}).count();\n\t\tdashboardStats.matches = Searches.find({'search_results.persons': {$ne: []}}).count();\n\t\tdashboardStats.matchPercent = (Math.round((dashboardStats.matches / dashboardStats.searches * 100) * 10) / 10) || 0;\n\t\tconsole.log(dashboardStats.faces);\n\t\treturn dashboardStats;\n\t},\n\n\tasync \"search.face\"(searchData){\n\t\t//return 1;\n\t\tconsole.log(Meteor.user());\n\t\tif(!Meteor.user()){\n\t\t\tthrow new Meteor.Error('not-logged-in','must be logged-in to perform search');\n\t\t\treturn false;\n\t\t};\n\t\tcheck(searchData.matchThreshold, Number);\n\t\tconsole.log(\"ANALYZING IMAGE...\");\n\t\tvar t0 = new Date().getTime();\n\t\tlet imgBytes = new Buffer.from(searchData.img.split(\",\")[1], \"base64\");\n\t\tlet imgFileName = `uploads/images/${Random.id()}.jpg`;\n\t\tlet uploadBucket = \"antennae\";\n\t\tlet s3Params = {\n\t\t\tACL: 'private',\n\t\t\tBody: imgBytes, \n\t\t\tBucket: uploadBucket, \n\t\t\tContentEncoding: 'base64',\n\t\t\tContentType: 'image/jpeg',\n\t\t\tKey: imgFileName,\n\t\t\tMetadata: {\n\t\t  \t\t'Content-Type': 'image/jpeg'\n\t\t  \t},\n\t\t    Tagging: `Name=${imgFileName}&Application=Antennae&Owner=Antmounds`\n\t\t };\n\t\t// console.log(s3Params);\n\t\tlet s3Results = await s3.putObject(s3Params).promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error;\n\t\t}).then( value => {\n\t\t\t// console.log(value);\n\t\t\treturn value;\n\t\t});\n\t\tconsole.log(s3Results);\n\t\t// get signed url for image valid for 1 day\n\t\ts3Params = { \n\t\t  Bucket: uploadBucket, \n\t\t  Key: imgFileName,\n\t\t  Expires: 86400 // 1-day url expiration\n\t\t};\n\t\tlet s3SignedUrl = s3.getSignedUrl(\"getObject\", s3Params);\n\t\tconsole.log(s3SignedUrl);\n\t\t// let colId = Meteor.user().profile.collections;\n\t\tlet colIds = Collections.find({collection_type: 'face'}, {fields: {collection_id: 1}}).fetch();\n\t\tconsole.log(colIds);\n\t\tlet moderationParams = {\n\t\t\t\"Image\": { \n\t\t\t\t// \"Bytes\": imgBytes,\n\t\t\t\t\"S3Object\": {\n\t\t\t\t\t\"Bucket\": uploadBucket, \n\t\t\t\t\t\"Name\": imgFileName\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"MinConfidence\": 50,\n\t\t};\n\t\tlet labelParams = {\n\t\t\t\"Image\": { \n\t\t\t\t// \"Bytes\": imgBytes,\n\t\t\t\t\"S3Object\": {\n\t\t\t\t\t\"Bucket\": uploadBucket, \n\t\t\t\t\t\"Name\": imgFileName\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"MaxLabels\": 20,\n\t\t\t\"MinConfidence\": 75,\n\t\t};\n\t\tlet faceParams = {\n\t\t\t\"Image\": { \n\t\t\t\t// \"Bytes\": imgBytes,\n\t\t\t\t\"S3Object\": {\n\t\t\t\t\t\"Bucket\": uploadBucket, \n\t\t\t\t\t\"Name\": imgFileName\n\t\t\t\t}\n\t\t\t},\n  \t\t\t\"Attributes\": [\"ALL\"],\n\t\t};\n\t\tlet celebrityParams = {\n\t\t\t\"Image\": { \n\t\t\t\t// \"Bytes\": imgBytes,\n\t\t\t\t\"S3Object\": {\n\t\t\t\t\t\"Bucket\": uploadBucket, \n\t\t\t\t\t\"Name\": imgFileName\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t\t// create request objects\n\t\tlet moderationRequest = rekognition.detectModerationLabels(moderationParams);\n\t\tlet labelRequest = rekognition.detectLabels(labelParams);\n\t\tlet faceRequest = rekognition.detectFaces(faceParams);\n\t\tlet celebrityRequest = rekognition.recognizeCelebrities(celebrityParams);\n\t\t// create promises\n\t\tlet allPromises = [];\n\t\tallPromises.push(moderationRequest.promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }));\n\t\tallPromises.push(labelRequest.promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }));\n\t\tallPromises.push(faceRequest.promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }));\n\t\tallPromises.push(celebrityRequest.promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }));\n\t\t_.each(colIds, (colId) => {\n\t\t\tlet rekognitionParams = {\n\t\t\t\t\"CollectionId\": colId.collection_id,\n\t\t\t\t\"FaceMatchThreshold\": searchData.matchThreshold || 95,\n\t\t\t\t\"MaxFaces\": 2,\n\t\t\t\t\"Image\": { \n\t\t\t\t\t\"S3Object\": {\n\t\t\t\t\t\t\"Bucket\": uploadBucket, \n\t\t\t\t\t\t\"Name\": imgFileName\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t\tconsole.log(rekognitionParams);\n\t\t\tlet rekognitionRequest = rekognition.searchFacesByImage(rekognitionParams);\n\t\t\tallPromises.push(rekognitionRequest.promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }));\n\t\t\tconsole.log(colId.collection_id);\n\t\t});\n\t\t// Fulfill promises in parallel\n\t\tlet response = Promise.all(\n\t\t\tallPromises\n\t\t).then(values => {\n\t\t\tconsole.log(JSON.stringify(values));\n\t\t\tconsole.log(values[0]);\n\t\t\tconsole.log(values[1]);\n\t\t\tconsole.log(values[2]);\n\t\t\tconsole.log(values[3]);\n\t\t\t//console.log(values[4]);\n\t\t\tlet i = 4;\n\t\t\tlet persons = [];\n\t\t\twhile(values[i]){\n\t\t\t\tconsole.log(values[i]);\n\t\t\t\tif (values[i].FaceMatches[0]){\n\t\t\t\t\tconsole.log(values[i].FaceMatches[0].Face.FaceId);\n\t\t\t\t\tlet colId = Prints.findOne({print_id: values[i].FaceMatches[0].Face.FaceId}, {fields: {print_collection_id: 1}}).print_collection_id;\n\t\t\t\t\tlet tag = {\n\t\t\t\t\t\tcollection: Collections.findOne(colId, {fields: {collection_name: 1}}).collection_name,\n\t\t\t\t\t\timage_id: values[i].FaceMatches[0].Face.ExternalImageId.replace(/__/g,\" \"),\n\t\t\t\t\t\tface_id: values[i].FaceMatches[0].Face.FaceId,\n\t\t\t\t\t\tsimilarity: values[i].FaceMatches[0].Similarity,\n\t\t\t\t\t};\n\t\t\t\t\tpersons.push(tag);\n\t\t\t\t\tconsole.log(tag);\n\t\t\t\t};\n\t\t\t\ti++;\n\t\t\t};\n\t\t\tlet t1 = new Date().getTime();\n\t\t\tconsole.log(`Response took ${t1 - t0} ms`);\n\t\t\tlet search_results = {\n\t\t\t\t\tmoderation: values[0].ModerationLabels,\n\t\t\t\t\tlabels: values[1].Labels,\n\t\t\t\t\tfaceDetails: values[2].FaceDetails,\n\t\t\t\t\tcelebrity: values[3].CelebrityFaces,\n\t\t\t\t\tpersons: persons,\n\t\t\t\t\turl: s3SignedUrl\n\t\t\t};\n\t\t\tlet search = {\n\t\t\t\t\tsearch_image: s3SignedUrl,\n\t\t\t\t\tstation_name: searchData.stationName,\n\t\t\t\t\tsearch_results: search_results\n\t\t\t};\n\t\t\tlet saveSearch = Searches.insert(search);\n\t\t\tconsole.log(saveSearch);\n\t\t\treturn search_results;\n\t\t}).catch(error => {\n\t\t\tconsole.log('caught error!');\n\t\t\tconsole.log(error);\n\t\t\tthrow new Meteor.Error(error.error, error.reason, error.details);\n\t\t}).finally(() => {\n\t\t\tconsole.log('finally');\n\t\t\t// console.log(this);\n\t\t});\n\t\tconsole.log(response);\n\t\tlet t1 = new Date().getTime();\n\t\tconsole.log(`Request took ${t1 - t0} ms`);\n\t\treturn response;\n\t},\n\n\t\"search.delete\"(searchId){\n\t\tcheck(searchId,String);\n\t\tif(searchId){\n\t\t\tlet search = Searches.remove(searchId);\n\t\t\tconsole.log(`deleted search: ${searchId}`);\n\t\t\treturn `deleted search: ${searchId}`;\n\t\t};\n\t}\n})\n\n// Define a rule to limit method calls\nlet runScanRule = {\n\ttype: 'method',\n\tname: 'search.face'\n};\n// Add the rule, allowing up to 1 scan every 5 seconds\nDDPRateLimiter.addRule(runScanRule, 1, 5000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\n\nimport { Searches } from './searches.js';\n\n\nMeteor.publish('searches.get', function(searchId='') {\n\tcheck(searchId,String);\n\tsearchId = searchId || {};\n  \t// console.log(Searches.find(searchId).count());\n\treturn Searches.find(\n\t\tsearchId, \n\t  { \n\t  \tsort: { created: -1 } \n\t}\n\t, {\n\t\tfields: Searches.publicFields\n\t});\n});\n\n// Define a rule to limit subscription calls\nvar subscribeToSearchesRule = {\n  type: 'subscription',\n  name: 'searches.get'\n}\n// Add the rule, allowing up to 1 subscription every 5 seconds.\nDDPRateLimiter.addRule(subscribeToSearchesRule, 1, 5000);","import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\n\n\nexport const Searches = new Meteor.Collection('searches');\n\n// Deny all client-side updates since we will be using methods to manage this collection\nSearches.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\nSearches.Schema = new SimpleSchema({\n  \"station_name\": {\n    type: String,\n    label: \"Station search performed at\",\n    optional: true,\n    defaultValue: \"Station 1\"\n  },\n  // schema rules\n  \"search_type\": {\n    type: [String],\n    label: \"Search types\",\n    optional: false,\n    allowedValues: [\"moderation\", \"label\", \"face\", \"collection\"],\n    defaultValue: [\"moderation\", \"label\", \"face\"]\n  },\n  \"search_collections\": {\n    type: [String],\n    label: \"Collections to search\",\n    optional: true,\n    defaultValue: [\"\"]\n  },\n  \"search_image\": {\n    type: String,\n    label: \"Image to search\",\n    optional: true,\n    defaultValue: \"/img/face-id-100.png\"\n  },\n  \"search_results\": {\n    type: Object,\n    label: \"Object of search types\",\n    optional: true,\n    blackbox: true,\n    defaultValue: {}\n  },\n  \"faces\": {\n    type: [Object],\n    label: \"Face objects found in image\",\n    optional: true,\n    blackbox: true,\n    defaultValue: []\n  },\n  \"created\": {\n    type: Date,\n    label: \"Date search performed\",\n    autoValue: function() {\n      if ( this.isInsert ) {\n        return new Date;\n      } \n    },\n    optional: true,\n    //index: true\n  },\n  \"updated\": {\n    type: Date,\n    label: \"Date search updated\",\n    autoValue: function() {\n      if ( this.isUpdate ) {\n        return new Date;\n      } \n    },\n    optional: true\n  }\n});\n\nSearches.attachSchema( Searches.Schema );\n\nif(Meteor.isServer){\n  Meteor.startup(() => {\n    Searches._ensureIndex({\n        created: -1,\n    });\n    // Searches._ensureIndex({ search_image: 1});\n  });\n}\n\nSearches.publicFields = {\n  station_name: 1,\n  search_type: 1,\n  search_collections: 1,\n  search_image: 1,\n  search_results: 1,\n  created: 1,\n  updated: 1\n};\n\n// Searches.helpers({\n//   // A collections is considered to be private if \"private\" is set to true\n//   isPrivate() {\n//     return this.private;\n//   }\n// });","import { Meteor } from 'meteor/meteor';\nimport { Collections } from '../../api/collections/collections.js';\nimport { Prints } from '../../api/prints/prints.js';\nimport { Searches } from '../../api/searches/searches.js';\nimport AWS from 'aws-sdk';\n\nAWS.config.region = 'us-east-1';\nvar rekognition = new AWS.Rekognition();\n\n// if the database is empty on server start, create some sample data.\n\nMeteor.startup(() => {\n\n  console.log(\"syncing aws collections...\");\n  let colParams = {};\n  let colRequest = rekognition.listCollections();\n  let promise = colRequest.promise();\n// colParams = {\n//            \"CollectionId\": \"macies\"\n//         };\n//   let test =      rekognition.describeCollection(colParams).promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }).then(result => {\n//           console.log(result);\n//           return result;\n//         });\n//     console.log(test);\n  let cols = promise.then(result => {\n    console.log(result);\n    if(result && result.CollectionIds.length > 0){\n      _.each(result.CollectionIds, function(colId){\n        let awsCol = {\n          collection_id: colId,\n          collection_name: colId.replace(\"__\", \" \"),\n          collection_type: \"face\",\n          private: true\n        };\n        // describe collection to get face count\n        colParams = {\n           \"CollectionId\": colId\n        };\n        let colResults = rekognition.describeCollection(colParams).promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }).then(result => {\n          awsCol.print_count = result.FaceCount;\n          console.log(`${colId} collection has ${result.FaceCount} faces`);\n          console.log(awsCol);\n          let existingCol = Collections.upsert({collection_id: colId}, {$set: awsCol});\n          console.log(`upserted collection: ${JSON.stringify(existingCol)}`);\n        });\n    console.log(colResults);\n        // Now try getting existing faces for each collection\n        let faceParams = {\n          CollectionId: colId\n        };\n        let faceRequest = rekognition.listFaces(faceParams);\n        let promise = faceRequest.promise();\n        let faces = promise.then(result => {\n          if(result && result.Faces.length > 0){\n            let collection_id = Collections.findOne({collection_id: colId})._id;\n            _.each(result.Faces, face => {\n              let awsFace = {\n                print_id: face.FaceId,\n                print_name: face.ExternalImageId.replace(\"__\", \" \") || face.ImageId,\n                print_type: \"face\",\n                print_collection_id: collection_id,\n                print_details: face,\n                print_adder: \"root\"\n              };\n              Prints.simpleSchema().clean(awsFace);\n              let existingFace = Prints.upsert({print_id: face.FaceId}, {$set: awsFace});\n              console.log(`upserted print: ${JSON.stringify(existingFace)}`);\n            })\n          }\n        });\n      });\n    }\n    return result;\n  });\n\n  // if (Prints.find().count() < 15) {\n  //   console.log(\"seeding prints...\");\n  //   let seedPrints = []\n  //   _.times(5, ()=>{\n  //     let print = {\n  //       print_adder: this.userId || \"root\",\n  //       print_collection: \"people\",\n  //       print_collection_id: \"people\",\n  //       print_name: faker.helpers.userCard().name,\n  //       print_id: faker.random.uuid(),\n  //       print_img: faker.image.avatar()\n  //     };\n  //     let printId = Prints.insert(print);\n  //     seedPrints.push(printId);\n  //   });\n  //   console.log(seedPrints);\n\n  // };\n});","/*\n * Copyright 2017-present Antmounds.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the GNU Affero General Public License, version 3.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     https://www.gnu.org/licenses/agpl-3.0.en.html\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport '../accounts-config.js';\nimport './fixtures.js';\n// This defines all the collections, publications and methods that the application provides\n// as an API to the client.\nimport './register-api.js';\n\nconst os = require('os');\n\n\nserver_mode = Meteor.isProduction ? \"PRODUCTION\" : \"DEVELOPMENT\";\n// console.log('index.js: ' + server_mode + \"-->\" + JSON.stringify(Meteor.settings));\n\nMeteor.methods({\n\n\tinfo(){\n\t\treturn `release: ${process.env.VERSION || '0.X'}-${process.env.RELEASE || 'free'} ~ version: ${process.env.VERSION || '0.X'} ~ build: ${process.env.BUILD || 'dev'} ~ hostname: ${os.hostname()}`;\n\t},\n\n\tgetCode(){\n\t\treturn Meteor.settings.private.key;\n\t},\n\n\tasync getData(){    \n\t\ttry{\n\t\t\tvar response = {};\n\t\t\tconst results = await HTTP.call('GET', 'http://jsonplaceholder.typicode.com/posts');\t\n\t\t\tconsole.log(JSON.stringify(results.data[0]));\t\n\t\t\tconsole.log(JSON.stringify(results.headers));\n\t\t\tresponse.code = true;\n\t\t\tresponse.data = results;\n\t\t} catch(e){\n\t\t\tresponse = false;\n\t\t\tconsole.log(e);\n\t\t} finally {\n\t\t\tconsole.log(\"finally...\")\n\t\t\t//throw new Meteor.Error(\"inappropriate-pic\",\"The user has taken an inappropriate picture.\");\t\n\t\t\treturn response;\n\t\t}\n\t}\n\n});\n\nMeteor.onConnection((connection)=>{\n\tlet clientAddr = connection.clientAddress;\n\tlet headers = connection.httpHeaders;\n\tconsole.log(`connection from ${clientAddr}`);\n\t// console.log(headers);\n})","import '../../api/collections/methods.js';\nimport '../../api/collections/publications.js';\nimport '../../api/searches/methods.js';\nimport '../../api/searches/publications.js';\nimport '../../api/prints/methods.js';\nimport '../../api/prints/publications.js';","import { Accounts } from 'meteor/accounts-base';\nimport { AccountsCommon } from 'meteor/accounts-base'\nimport { AccountsClient } from 'meteor/accounts-base'\n\n\nif (Meteor.isClient) {\n\tAccounts.ui.config({\n\t  passwordSignupFields: 'USERNAME_AND_EMAIL',\n\t});\n}\n\nif (Meteor.isServer) {\n\tconsole.log(\"accounts config loaded!\");\n\tAccounts.onCreateUser((options, user) => {\n\t\t// user.created = new Date();\n\n\t\tconsole.log(\"user: \" + user);\n\t\tconsole.log(\"options: \" + options);\n\t\t// user = JSON.stringify(user);\n\t\tconsole.log(user);\n\t\t// options = JSON.stringify(options);\n\t\tconsole.log(options);\n\n\t    // Don't forget to return the new user object at the end!\n\t\treturn user;\n\t});\n}","/*\n * Copyright 2017-present Antmounds.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the GNU Affero General Public License, version 3.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     https://www.gnu.org/licenses/agpl-3.0.en.html\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport '../imports/startup/server';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}