{"version":3,"sources":["meteor://ðŸ’»app/imports/api/collections/collections.js","meteor://ðŸ’»app/imports/api/collections/methods.js","meteor://ðŸ’»app/imports/api/collections/publications.js","meteor://ðŸ’»app/imports/api/prints/methods.js","meteor://ðŸ’»app/imports/api/prints/prints.js","meteor://ðŸ’»app/imports/api/prints/publications.js","meteor://ðŸ’»app/imports/api/searches/methods.js","meteor://ðŸ’»app/imports/api/searches/publications.js","meteor://ðŸ’»app/imports/api/searches/searches.js","meteor://ðŸ’»app/imports/startup/server/fixtures.js","meteor://ðŸ’»app/imports/startup/server/index.js","meteor://ðŸ’»app/imports/startup/server/register-api.js","meteor://ðŸ’»app/imports/startup/accounts-config.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","Collections","Mongo","watch","require","v","SimpleSchema","Meteor","Collection","deny","insert","update","remove","Schema","type","String","label","optional","defaultValue","index","unique","allowedValues","Boolean","Date","autoValue","isInsert","isUpdate","attachSchema","publicFields","collection_id","collection_name","collection_type","private","created","updated","DDPRateLimiter","AWS","default","config","region","rekognition","Rekognition","methods","newCol","console","log","col","collectionParams","CollectionId","collectionRequest","createCollection","promise","catch","error","Error","code","message","then","values","colId","check","print","publish","collectionId","find","sort","fields","subscribeToCollectionsRule","name","addRule","Prints","newPrint","print_adder","userId","print_collection","findOne","collection","print_name","replace","print_img","img","simpleSchema","clean","faceParams","ExternalImageId","Image","Buffer","from","split","DetectionAttributes","faceRequest","indexFaces","indexFace","result","print_id","FaceRecords","Face","FaceId","printId","Object","blackbox","print_type","print_details","selector","subscribeToPrintsRule","Searches","picData","matchThreshold","Number","t0","getTime","imgBytes","colIds","fetch","moderationParams","labelParams","celebrityParams","moderationRequest","detectModerationLabels","labelRequest","detectLabels","detectFaces","celebrityRequest","recognizeCelebrities","allPromises","push","_","each","rekognitionParams","rekognitionRequest","searchFacesByImage","response","Promise","all","JSON","stringify","i","persons","FaceMatches","tag","image_id","face_id","similarity","Similarity","t1","search_results","moderation","ModerationLabels","labels","Labels","faceDetails","FaceDetails","celebrity","CelebrityFaces","search","saveSearch","reason","details","finally","searchId","runScanRule","subscribeToSearchesRule","isServer","startup","_ensureIndex","search_id","search_type","search_collections","search_image","colParams","colRequest","listCollections","cols","CollectionIds","length","awsCol","existingCol","upsert","$set","listFaces","faces","Faces","face","awsFace","ImageId","existingFace","count","seedPrints","times","faker","helpers","userCard","random","uuid","image","avatar","HTTP","os","server_mode","isProduction","settings","info","process","env","BUILD","hostname","getData","results","call","data","headers","e","onConnection","connection","clientAddr","clientAddress","httpHeaders","Accounts","AccountsCommon","AccountsClient","isClient","ui","passwordSignupFields","onCreateUser","options","user"],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\n\n\nexport const Collections = new Meteor.Collection('collections');\n\n// Deny all client-side updates since we will be using methods to manage this collection\nCollections.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\nCollections.Schema = new SimpleSchema({\n  // Our schema rules will go here.\n  \"collection_id\": {\n    type: String,\n    label: \"Collection ID\",\n    optional: false,\n    defaultValue: \"Collection ID\",\n    index: true,\n    unique: true\n  },\n  \"collection_name\": {\n    type: String,\n    label: \"Collection Name\",\n    optional: false,\n    defaultValue: \"MyCollection\",\n    index: true\n  },\n  \"collection_type\": {\n    type: String,\n    label: \"Collection type\",\n    optional: false,\n    allowedValues: [\"face\", \"voice\"],\n    defaultValue: \"face\"\n  },\n  \"private\": {\n    type: Boolean,\n    label: \"Collection privacy\",\n    optional: false,\n    defaultValue: true\n  },\n  \"created\": {\n    type: Date,\n    label: \"Date collection added to Antennae\",\n    autoValue: function() {\n      if ( this.isInsert ) {\n        return new Date;\n      } \n    },\n    optional: true\n  },\n  \"updated\": {\n    type: Date,\n    label: \"Date collection updated in System\",\n    autoValue: function() {\n      if ( this.isUpdate ) {\n        return new Date;\n      } \n    },\n    optional: true\n  }\n});\n\nCollections.attachSchema( Collections.Schema ); \n\n\nCollections.publicFields = {\n  collection_id: 1,\n  collection_name: 1,\n  collection_type: 1,\n  private: 1,\n  created: 1,\n  updated: 1\n};\n\n// Collections.helpers({\n//   // A collections is considered to be private if \"private\" is set to true\n//   isPrivate() {\n//     return this.private;\n//   }\n// });","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport AWS from 'aws-sdk';\n\nimport { Collections } from './collections.js';\n\nAWS.config.region = 'us-east-1';\nvar rekognition = new AWS.Rekognition();\n\nMeteor.methods({\n\t\"collection.save\"(newCol){\n\t\tconsole.log(newCol);\n\t\tlet col = Collections.insert(newCol);\n\t\tlet collectionParams = {\n  \t\t\tCollectionId: newCol.collection_id\n\t\t};\n\t\tlet collectionRequest = rekognition.createCollection(collectionParams).promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; });\n\t\tcollectionRequest.then(values => {return values});\n\t\tif(col){\n\t\t\tconsole.log(`added collection: ${col}`);\n\t\t}else{\n            console.log(newCol);\n            throw new Meteor.Error('add-collection-error',`error adding collection: ${newCol}`)\t\t\n\t\t}\n\t\treturn `added collection: ${col}`;\n\t},\n\n\t\"collection.delete\"(colId){\n\t\tcheck(colId,String);\n\t\tif(colId){\n\t\t\tlet print = Collections.remove(colId);\n\t\t\tconsole.log(`deleted collection: ${colId}`);\n\t\t\treturn `deleted collection: ${colId}`;\n\t\t};\n\t}\n})\n\n// Define a rule to limit method calls\n// let runScanRule = {\n// \ttype: 'method',\n// \tname: 'moment.scan'\n// };\n// Add the rule, allowing up to 1 scan every 10 seconds\n// DDPRateLimiter.addRule(runScanRule, 1, 10000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\n\nimport { Collections } from './collections.js';\n\n\nMeteor.publish('collections.get', function(collectionId='') {\n\tcheck(collectionId,String);\n\tcollectionId = collectionId || {};\n  \t// console.log(Collections.find(collectionId).count());\n\treturn Collections.find(\n\t\tcollectionId, \n\t  { \n\t  \tsort: { created: -1 } \n\t}\n\t, {\n\t\tfields: Collections.publicFields\n\t});\n});\n\n// Define a rule to limit subscription calls\nvar subscribeToCollectionsRule = {\n  type: 'subscription',\n  name: 'collections.get'\n}\n// Add the rule, allowing up to 1 subscription every 5 seconds.\nDDPRateLimiter.addRule(subscribeToCollectionsRule, 1, 5000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport AWS from 'aws-sdk';\n\nimport { Collections } from '../collections/collections.js';\nimport { Prints } from './prints.js';\n\nAWS.config.region = 'us-east-1';\nvar rekognition = new AWS.Rekognition();\n\nMeteor.methods({\n\t\"print.save\"(newPrint){\n\t\tnewPrint.print_adder = this.userId || \"null\";\n\t\tnewPrint.print_collection = Collections.findOne(newPrint.collection).collection_id || \"people\";\n\t\tnewPrint.print_name = newPrint.name.replace(/ /g,\"_\");\n\t\tnewPrint.print_img = newPrint.img;\n\t\t// console.log(newPrint);\n\t\tif(!newPrint){\n\t\t\tthrow new Meteor.Error('invalid-print','submitted print is invalid!');\n\t\t};\n\t\tPrints.simpleSchema().clean(newPrint);\n        // index a face into a collection\n        let faceParams = {\n          CollectionId: newPrint.print_collection,\n          ExternalImageId: newPrint.print_name,\n\t\t  Image: { \n\t\t\t\"Bytes\": new Buffer.from(newPrint.print_img.split(\",\")[1], \"base64\"),\n\t\t  },\n          DetectionAttributes: [\"ALL\"]\n        };\n        let faceRequest = rekognition.indexFaces(faceParams);\n        let promise = faceRequest.promise();\n        let indexFace = promise.then(result => {\n        \tconsole.log(result);\n        \tnewPrint.print_id = result.FaceRecords[0].Face.FaceId;\n\t\t\tlet print = Prints.insert(newPrint);\n        \tconsole.log(`inserted: ${print}`);\n        \treturn result;\n        }).catch(error => {\n        \tthrow new Meteor.Error(error.code, error.message, error);\n        \treturn error;\n        });\n\t\treturn indexFace;\n\t},\n\n\t\"print.delete\"(printId){\n\t\tcheck(printId,String);\n\t\tif(printId){\n\t\t\tlet print = Prints.remove(printId);\n\t\t\tconsole.log(`deleted face: ${printId}`);\n\t\t\treturn `deleted face: ${printId}`;\n\t\t};\n\t}\n})\n\n// Define a rule to limit method calls\n// let runScanRule = {\n// \ttype: 'method',\n// \tname: 'print.save'\n// };\n// Add the rule, allowing up to 1 scan every 10 seconds\n// DDPRateLimiter.addRule(runScanRule, 1, 10000);","import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\n\n\nexport const Prints = new Meteor.Collection('prints');\n\n// Deny all client-side updates since we will be using methods to manage this collection\nPrints.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\nPrints.Schema = new SimpleSchema({\n  // Our schema rules will go here.\n  \"print_id\": {\n    type: String,\n    label: \"Print ID\",\n    optional: false,\n    defaultValue: \"AAAA-BBBB-CCCC-1111-2222-3333\",\n    index: true,\n    unique: true\n  },\n  \"print_name\": {\n    type: String,\n    label: \"Print Name\",\n    optional: false,\n    defaultValue: \"New Person\"\n  },\n  \"print_type\": {\n    type: String,\n    label: \"Print type\",\n    optional: false,\n    allowedValues: [\"face\", \"voice\", \"finger\"],\n    defaultValue: \"face\"\n  },\n  \"print_collection\": {\n    type: String,\n    label: \"Print collection\",\n    optional: false,\n    defaultValue: \"people\"\n  },\n  \"print_img\": {\n    type: String,\n    label: \"Print img\",\n    optional: true,\n    defaultValue: \"/img/face-id-100.png\"\n  },\n  \"print_details\": {\n    type: Object,\n    label: \"Print details\",\n    optional: true,\n    blackbox: true\n  },\n  \"print_adder\": {\n    type: String,\n    label: \"User who added print\",\n    optional: false\n  },\n  \"created\": {\n    type: Date,\n    label: \"Date print added to Antennae\",\n    autoValue: function() {\n      if ( this.isInsert ) {\n        return new Date;\n      } \n    },\n    optional: true\n  },\n  \"updated\": {\n    type: Date,\n    label: \"Date print updated in System\",\n    autoValue: function() {\n      if ( this.isUpdate ) {\n        return new Date;\n      } \n    },\n    optional: true\n  }\n});\n\nPrints.attachSchema( Prints.Schema ); \n\n\nPrints.publicFields = {\n  print_id: 1,\n  print_name: 1,\n  print_type: 1,\n  print_collection: 1,\n  print_img: 1,\n  print_details: 1,\n  print_adder: 1,\n  created: 1,\n  updated: 1\n};\n\n// Prints.helpers({\n//   // A collections is considered to be private if \"private\" is set to true\n//   isPrivate() {\n//     return this.private;\n//   }\n// });","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\n\nimport { Prints } from './prints.js';\n\n\nMeteor.publish('prints.get', function(collectionId) {\n\tcollectionId = collectionId || \"\";\n\tcheck(collectionId,String);\n\tlet selector = {\n\t\t// print_collection: collectionId\n\t};\n  \t// console.log(Collections.find(collectionId).count());\n\treturn Prints.find(\n\t\tselector, \n\t  { \n\t  \tsort: { created: -1 } \n\t}\n\t, {\n\t\tfields: Prints.publicFields\n\t});\n});\n\n// Define a rule to limit subscription calls\nvar subscribeToPrintsRule = {\n  type: 'subscription',\n  name: 'prints.get'\n}\n// Add the rule, allowing up to 1 subscription every 5 seconds.\nDDPRateLimiter.addRule(subscribeToPrintsRule, 1, 5000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport AWS from 'aws-sdk';\n\nimport { Collections } from '../collections/collections.js';\nimport { Prints } from '../../api/prints/prints.js';\nimport { Searches } from './searches.js';\n\nAWS.config.region = 'us-east-1';\nvar rekognition = new AWS.Rekognition();\n\nMeteor.methods({\n\t\"search.face\"(picData,matchThreshold){\n\t\t//return 1;\n\t\t// if(!Meteor.user){\n\t\t// \tthrow new Meteor.Error('not-logged-in','must be logged-in to perform search');\n\t\t// \treturn false;\n\t\t// }\n\t\tcheck(matchThreshold, Number);\n\t\tconsole.log(\"ANALYZING IMAGE...\");\n\t\tvar t0 = new Date().getTime();\n\t\tlet imgBytes = new Buffer.from(picData.split(\",\")[1], \"base64\");\n\t\t// let colId = Meteor.user().profile.collections;\n\t\tlet colIds = Collections.find({collection_type: 'face'}, {fields: {collection_id: 1}}).fetch();\n\t\tconsole.log(colIds)\n\t\t// let matchThreshold = matchThreshold;\n\t\tlet moderationParams = {\n\t\t\t\"Image\": { \n\t\t\t\t\"Bytes\": imgBytes,\n\t\t\t},\n\t\t\t\"MinConfidence\": 50,\n\t\t};\n\t\tlet labelParams = {\n\t\t\t\"Image\": { \n\t\t\t\t\"Bytes\": imgBytes,\n\t\t\t},\n\t\t\t\"MaxLabels\": 20,\n\t\t\t\"MinConfidence\": 75,\n\t\t};\n\t\tlet faceParams = {\n\t\t\t\"Image\": { \n\t\t\t\t\"Bytes\": imgBytes,\n\t\t\t},\n  \t\t\t\"Attributes\": [\"ALL\"],\n\t\t};\n\t\tlet celebrityParams = {\n\t\t\t\"Image\": { \n\t\t\t\t\"Bytes\": imgBytes,\n\t\t\t},\n\t\t};\n\t\t// create request objects\n\t\tlet moderationRequest = rekognition.detectModerationLabels(moderationParams);\n\t\tlet labelRequest = rekognition.detectLabels(labelParams);\n\t\tlet faceRequest = rekognition.detectFaces(faceParams);\n\t\tlet celebrityRequest = rekognition.recognizeCelebrities(celebrityParams);\n\t\t// create promises\n\t\tlet allPromises = [];\n\t\tallPromises.push(moderationRequest.promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }));\n\t\tallPromises.push(labelRequest.promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }));\n\t\tallPromises.push(faceRequest.promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }));\n\t\tallPromises.push(celebrityRequest.promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }));\n\t\t_.each(colIds, (colId) => {\n\t\t\tlet rekognitionParams = {\n\t\t\t\t\"CollectionId\": colId.collection_id,\n\t\t\t\t\"FaceMatchThreshold\": matchThreshold,\n\t\t\t\t\"MaxFaces\": 2,\n\t\t\t\t\"Image\": { \n\t\t\t\t\t\"Bytes\": imgBytes,\n\t\t\t\t},\n\t\t\t};\n\t\t\tconsole.log(rekognitionParams);\n\t\t\tlet rekognitionRequest = rekognition.searchFacesByImage(rekognitionParams);\n\t\t\tallPromises.push(rekognitionRequest.promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }));\n\t\t\tconsole.log(colId.collection_id);\n\t\t});// rekognitionRequest.promise();\n\t\t// Fulfill promises in parallel\n\t\tlet response = Promise.all(\n\t\t\tallPromises\n\t\t).then(values => {\n\t\t\tconsole.log(JSON.stringify(values));\n\t\t\tconsole.log(values[0]);\n\t\t\tconsole.log(values[1]);\n\t\t\tconsole.log(values[2]);\n\t\t\tconsole.log(values[3]);\n\t\t\t//console.log(values[4]);\n\t\t\tlet i = 4;\n\t\t\tlet persons = [];\n\t\t\twhile(values[i]){\n\t\t\t\tconsole.log(values[i]);\n\t\t\t\tif (values[i].FaceMatches[0]){\n\t\t\t\t\tlet tag = {\n\t\t\t\t\t\tcollection: Prints.findOne({print_id: values[i].FaceMatches[0].Face.FaceId}, {fields: {print_collection: 1}}),\n\t\t\t\t\t\timage_id: values[i].FaceMatches[0].Face.ExternalImageId,\n\t\t\t\t\t\tface_id: values[i].FaceMatches[0].Face.FaceId,\n\t\t\t\t\t\tsimilarity: values[i].FaceMatches[0].Similarity,\n\t\t\t\t\t};\n\t\t\t\t\tpersons.push(tag);\n\t\t\t\t\tconsole.log(tag);\n\t\t\t\t};\n\t\t\t\ti++;\n\t\t\t};\n\t\t\tlet t1 = new Date().getTime();\n\t\t\tconsole.log(`Response took ${t1 - t0} ms`);\n\t\t\tlet search_results = {\n\t\t\t\t\tmoderation: values[0].ModerationLabels,\n\t\t\t\t\tlabels: values[1].Labels,\n\t\t\t\t\tfaceDetails: values[2].FaceDetails,\n\t\t\t\t\tcelebrity: values[3].CelebrityFaces,\n\t\t\t\t\tpersons: persons, //.FaceMatches[0],\n\t\t\t};\n\t\t\tlet search = {\n\t\t\t\t\t// search_image: picData,\n\t\t\t\t\tsearch_results: search_results\n\t\t\t};\n\t\t\tlet saveSearch = Searches.insert(search);\n\t\t\tconsole.log(saveSearch);\n\t\t\treturn search_results;\n\t\t}).catch(error => {\n\t\t\tconsole.log('caught error!');\n\t\t\tconsole.log(error);\n\t\t\tthrow new Meteor.Error(error.error, error.reason, error.details);\n\t\t}).finally(() => {\n\t\t\tconsole.log('finally');\n\t\t\tconsole.log(this);\n\t\t});\n\t\tconsole.log(response);\n\t\tlet t1 = new Date().getTime();\n\t\tconsole.log(`Request took ${t1 - t0} ms`);\n\t\treturn response;\n\t},\n\n\t\"search.delete\"(searchId){\n\t\tcheck(searchId,String);\n\t\tif(searchId){\n\t\t\tlet search = Searches.remove(searchId);\n\t\t\tconsole.log(`deleted search: ${searchId}`);\n\t\t\treturn `deleted search: ${searchId}`;\n\t\t};\n\t}\n})\n\n// Define a rule to limit method calls\nlet runScanRule = {\n\ttype: 'method',\n\tname: 'moment.scan'\n};\n// Add the rule, allowing up to 1 scan every 10 seconds\nDDPRateLimiter.addRule(runScanRule, 1, 10000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\n\nimport { Searches } from './searches.js';\n\n\nMeteor.publish('searches.get', function(searchId='') {\n\tcheck(searchId,String);\n\tsearchId = searchId || {};\n  \t// console.log(Searches.find(searchId).count());\n\treturn Searches.find(\n\t\tsearchId, \n\t  { \n\t  \tsort: { created: -1 } \n\t}\n\t, {\n\t\tfields: Searches.publicFields\n\t});\n});\n\n// Define a rule to limit subscription calls\nvar subscribeToSearchesRule = {\n  type: 'subscription',\n  name: 'searches.get'\n}\n// Add the rule, allowing up to 1 subscription every 5 seconds.\nDDPRateLimiter.addRule(subscribeToSearchesRule, 1, 5000);","import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\n\n\nexport const Searches = new Meteor.Collection('searches');\n\n// Deny all client-side updates since we will be using methods to manage this collection\nSearches.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\nSearches.Schema = new SimpleSchema({\n  // schema rules\n  \"search_type\": {\n    type: [String],\n    label: \"Search types\",\n    optional: false,\n    allowedValues: [\"moderation\", \"label\", \"face\", \"collection\"],\n    defaultValue: [\"moderation\", \"label\", \"face\"]\n  },\n  \"search_collections\": {\n    type: [String],\n    label: \"Collections to search\",\n    optional: true,\n    defaultValue: [\"\"]\n  },\n  \"search_image\": {\n    type: String,\n    label: \"Image to search\",\n    optional: true,\n    defaultValue: \"/img/face-id-100.png\"\n  },\n  \"search_results\": {\n    type: Object,\n    label: \"Object of search types\",\n    optional: true,\n    blackbox: true,\n    defaultValue: {}\n  },\n  \"faces\": {\n    type: [Object],\n    label: \"Face objects found in image\",\n    optional: true,\n    blackbox: true,\n    defaultValue: []\n  },\n  \"created\": {\n    type: Date,\n    label: \"Date search performed\",\n    autoValue: function() {\n      if ( this.isInsert ) {\n        return new Date;\n      } \n    },\n    optional: true,\n    //index: true\n  },\n  \"updated\": {\n    type: Date,\n    label: \"Date search updated\",\n    autoValue: function() {\n      if ( this.isUpdate ) {\n        return new Date;\n      } \n    },\n    optional: true\n  }\n});\n\nSearches.attachSchema( Searches.Schema );\n\nif(Meteor.isServer){\n  Meteor.startup(() => {\n    Searches._ensureIndex({\n        created: -1,\n    });\n    // Searches._ensureIndex({ search_image: 1});\n  });\n}\n\nSearches.publicFields = {\n  search_id: 1,\n  search_type: 1,\n  search_collections: 1,\n  search_image: 1,\n  search_results: 1,\n  created: 1,\n  updated: 1\n};\n\n// Searches.helpers({\n//   // A collections is considered to be private if \"private\" is set to true\n//   isPrivate() {\n//     return this.private;\n//   }\n// });","import { Meteor } from 'meteor/meteor';\nimport { Collections } from '../../api/collections/collections.js';\nimport { Prints } from '../../api/prints/prints.js';\nimport { Searches } from '../../api/searches/searches.js';\nimport AWS from 'aws-sdk';\n\nAWS.config.region = 'us-east-1';\nvar rekognition = new AWS.Rekognition();\n\n// if the database is empty on server start, create some sample data.\n\nMeteor.startup(() => {\n\n  console.log(\"getting aws collections...\");\n  let colParams= {};\n  let colRequest = rekognition.listCollections(colParams);\n  let promise = colRequest.promise();\n  let cols = promise.then(result => {\n    console.log(result);\n    if(result && result.CollectionIds.length > 0){\n      _.each(result.CollectionIds, function(colId){\n        let awsCol = {\n          collection_id: colId,\n          collection_name: colId,\n          collection_type: \"face\",\n          private: true\n        };\n        let existingCol = Collections.upsert({collection_id: colId}, {$set: awsCol});\n        console.log(`upserted collection: ${JSON.stringify(existingCol)}`);\n        // Now try getting existing faces for each collection\n        let faceParams = {\n          CollectionId: colId\n        };\n        let faceRequest = rekognition.listFaces(faceParams);\n        let promise = faceRequest.promise();\n        let faces = promise.then(result => {\n          if(result && result.Faces.length > 0){\n            console.log(`collection has ${result.Faces.length} faces`);\n            _.each(result.Faces, function(face){\n              let awsFace = {\n                print_id: face.FaceId,\n                print_name: face.ExternalImageId || face.ImageId,\n                print_type: \"face\",\n                print_collection: colId,\n                print_details: face,\n                print_adder: \"root\"\n              };\n              Prints.simpleSchema().clean(awsFace);\n              let existingFace = Prints.upsert({print_id: face.FaceId}, {$set: awsFace});\n              console.log(existingFace);\n            })\n          }\n        });\n      });\n    }\n    return result;\n  });\n\n  if (Prints.find().count() < 15) {\n    console.log(\"seeding prints...\");\n    let seedPrints = []\n    _.times(5, ()=>{\n      let print = {\n        print_adder: this.userId || \"deded\",\n        print_collection: \"people\",\n        print_name: faker.helpers.userCard().name,\n        print_id: faker.random.uuid(),\n        print_img: faker.image.avatar()\n      };\n      let printId = Prints.insert(print);\n      seedPrints.push(printId);\n    });\n    console.log(seedPrints);\n\n  };\n});","/*\n * Copyright 2017-present Antmounds.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the GNU Affero General Public License, version 3.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     https://www.gnu.org/licenses/agpl-3.0.en.html\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport '../accounts-config.js';\nimport './fixtures.js';\n// This defines all the collections, publications and methods that the application provides\n// as an API to the client.\nimport './register-api.js';\n\nconst os = require('os');\n\n\nserver_mode = Meteor.isProduction ? \"PRODUCTION\" : \"DEVELOPMENT\";\nconsole.log('index.js: ' + server_mode + \"-->\" + JSON.stringify(Meteor.settings));\n\nMeteor.methods({\n\n\tinfo(){\n\t\treturn `version: 0.9.0 - build: ${process.env.BUILD || 'dev'} - hostname: ${os.hostname()}`;\n\t},\n\n\tasync getData(){    \n\t\ttry{\n\t\t\tvar response = {};\n\t\t\tconst results = await HTTP.call('GET', 'http://jsonplaceholder.typicode.com/posts');\t\n\t\t\tconsole.log(JSON.stringify(results.data[0]));\t\n\t\t\tconsole.log(JSON.stringify(results.headers));\n\t\t\tresponse.code = true;\t\t\n\t\t\tresponse.data = results;\t\n\t\t} catch(e){\n\t\t\tresponse = false;\n\t\t\tconsole.log(e);\n\t\t} finally {\n\t\t\tconsole.log(\"finally...\")\n\t\t\t//throw new Meteor.Error(\"inappropriate-pic\",\"The user has taken an inappropriate picture.\");\t\n\t\t\treturn response;\n\t\t}\n\t}\n\n});\n\nMeteor.onConnection((connection)=>{\n\tlet clientAddr = connection.clientAddress;\n\tlet headers = connection.httpHeaders;\n\tconsole.log(`connection from ${clientAddr}`);\n\t// console.log(headers);\n})","import '../../api/collections/methods.js';\nimport '../../api/collections/publications.js';\nimport '../../api/searches/methods.js';\nimport '../../api/searches/publications.js';\nimport '../../api/prints/methods.js';\nimport '../../api/prints/publications.js';","import { Accounts } from 'meteor/accounts-base';\nimport { AccountsCommon } from 'meteor/accounts-base'\nimport { AccountsClient } from 'meteor/accounts-base'\n\n\nif (Meteor.isClient) {\n\tAccounts.ui.config({\n\t  passwordSignupFields: 'USERNAME_AND_EMAIL',\n\t});\n}\n\nif (Meteor.isServer) {\n\tconsole.log(\"accounts config loaded!\");\n\tAccounts.onCreateUser((options, user) => {\n\t\t// user.created = new Date();\n\n\t\tconsole.log(\"user: \" + user);\n\t\tconsole.log(\"options: \" + options);\n\t\t// user = JSON.stringify(user);\n\t\tconsole.log(user);\n\t\t// options = JSON.stringify(options);\n\t\tconsole.log(options);\n\n\t    // Don't forget to return the new user object at the end!\n\t\treturn user;\n\t});\n}","/*\n * Copyright 2017-present Antmounds.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the GNU Affero General Public License, version 3.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     https://www.gnu.org/licenses/agpl-3.0.en.html\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport '../imports/startup/server';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}