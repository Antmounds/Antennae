{"version":3,"sources":["meteor://ðŸ’»app/imports/api/collections/collections.js","meteor://ðŸ’»app/imports/api/collections/methods.js","meteor://ðŸ’»app/imports/api/collections/publications.js","meteor://ðŸ’»app/imports/api/prints/methods.js","meteor://ðŸ’»app/imports/api/prints/prints.js","meteor://ðŸ’»app/imports/api/prints/publications.js","meteor://ðŸ’»app/imports/api/searches/methods.js","meteor://ðŸ’»app/imports/api/searches/publications.js","meteor://ðŸ’»app/imports/api/searches/searches.js","meteor://ðŸ’»app/imports/startup/server/fixtures.js","meteor://ðŸ’»app/imports/startup/server/index.js","meteor://ðŸ’»app/imports/startup/server/register-api.js","meteor://ðŸ’»app/imports/startup/accounts-config.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","Collections","Mongo","watch","require","v","SimpleSchema","Meteor","Collection","deny","insert","update","remove","Schema","type","String","label","optional","defaultValue","index","unique","allowedValues","Boolean","Date","autoValue","isInsert","isUpdate","attachSchema","publicFields","collection_id","collection_name","collection_type","private","created","updated","DDPRateLimiter","AWS","default","config","region","rekognition","Rekognition","methods","newCol","console","log","collectionParams","CollectionId","collectionRequest","createCollection","promise","catch","error","Error","code","message","then","values","col","colId","check","findOne","params","deleteCollection","oldCol","_id","publish","collectionId","find","sort","fields","subscribeToCollectionsRule","name","addRule","Prints","newPrint","collection","print_adder","userId","print_collection","print_collection_id","print_name","replace","print_img","img","simpleSchema","clean","faceParams","ExternalImageId","Image","Buffer","from","split","DetectionAttributes","faceRequest","indexFaces","indexFace","result","print_id","FaceRecords","Face","FaceId","print","printId","data","printCount","count","Object","blackbox","print_type","print_details","selector","subscribeToPrintsRule","Searches","picData","matchThreshold","Number","t0","getTime","imgBytes","colIds","fetch","moderationParams","labelParams","celebrityParams","moderationRequest","detectModerationLabels","labelRequest","detectLabels","detectFaces","celebrityRequest","recognizeCelebrities","allPromises","push","_","each","rekognitionParams","rekognitionRequest","searchFacesByImage","response","Promise","all","JSON","stringify","i","persons","FaceMatches","tag","image_id","face_id","similarity","Similarity","t1","search_results","moderation","ModerationLabels","labels","Labels","faceDetails","FaceDetails","celebrity","CelebrityFaces","search","saveSearch","reason","details","finally","searchId","runScanRule","subscribeToSearchesRule","isServer","startup","_ensureIndex","search_id","search_type","search_collections","search_image","colParams","colRequest","listCollections","cols","CollectionIds","length","awsCol","existingCol","upsert","$set","listFaces","faces","Faces","face","awsFace","ImageId","existingFace","HTTP","os","server_mode","isProduction","settings","info","process","env","BUILD","hostname","getData","results","call","headers","e","onConnection","connection","clientAddr","clientAddress","httpHeaders","Accounts","AccountsCommon","AccountsClient","isClient","ui","passwordSignupFields","onCreateUser","options","user"],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\n\n\nexport const Collections = new Meteor.Collection('collections');\n\n// Deny all client-side updates since we will be using methods to manage this collection\nCollections.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\nCollections.Schema = new SimpleSchema({\n  // Our schema rules will go here.\n  \"collection_id\": {\n    type: String,\n    label: \"Collection ID\",\n    optional: false,\n    defaultValue: \"MyCollection\",\n    index: true,\n    unique: true\n  },\n  \"collection_name\": {\n    type: String,\n    label: \"Collection Name\",\n    optional: false,\n    defaultValue: \"MyCollection\",\n    index: true\n  },\n  \"collection_type\": {\n    type: String,\n    label: \"Collection type\",\n    optional: false,\n    allowedValues: [\"face\", \"voice\"],\n    defaultValue: \"face\"\n  },\n  \"private\": {\n    type: Boolean,\n    label: \"Collection privacy\",\n    optional: false,\n    defaultValue: true\n  },\n  \"created\": {\n    type: Date,\n    label: \"Date collection added to Antennae\",\n    autoValue: function() {\n      if ( this.isInsert ) {\n        return new Date;\n      } \n    },\n    optional: true\n  },\n  \"updated\": {\n    type: Date,\n    label: \"Date collection updated in System\",\n    autoValue: function() {\n      if ( this.isUpdate ) {\n        return new Date;\n      } \n    },\n    optional: true\n  }\n});\n\nCollections.attachSchema( Collections.Schema ); \n\n\nCollections.publicFields = {\n  collection_id: 1,\n  collection_name: 1,\n  collection_type: 1,\n  private: 1,\n  created: 1,\n  updated: 1\n};\n\n// Collections.helpers({\n//   // A collections is considered to be private if \"private\" is set to true\n//   isPrivate() {\n//     return this.private;\n//   }\n// });","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport AWS from 'aws-sdk';\n\nimport { Collections } from './collections.js';\n\nAWS.config.region = 'us-east-1';\nvar rekognition = new AWS.Rekognition();\n\nMeteor.methods({\n\t\"collection.save\"(newCol){\n\t\tconsole.log(newCol);\n\t\tlet collectionParams = {\n  \t\t\tCollectionId: newCol.collection_id\n\t\t};\n\t\tlet collectionRequest = rekognition.createCollection(collectionParams).promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; });\n\t\tcollectionRequest.then(values => {return values});\n\t\tlet col = Collections.insert(newCol);\n\t\tif(col){\n\t\t\tconsole.log(`added collection: ${col}`);\n\t\t}else{\n            console.log(newCol);\n            throw new Meteor.Error('add-collection-error',`error adding collection: ${newCol}`)\t\t\n\t\t}\n\t\treturn `added collection: ${col}`;\n\t},\n\n\t\"collection.delete\"(colId){\n\t\tcheck(colId,String);\n\t\tlet col = Collections.findOne(colId);\n\t\tconsole.log(col);\n\t\tif(!col){\n\t\t\tthrow new Meteor.Error('no-collection','No collection found with given id!');\n\t\t}else{\n\t\t\tlet params = {\n\t\t\t\tCollectionId: col.collection_id\n\t\t\t};\n\t\t\tlet collectionRequest = rekognition.deleteCollection(params).promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; });\n\t\t\tcollectionRequest.then(values => {return values});\n\t\t\tlet oldCol = Collections.remove(col._id);\n\t\t\tif(oldCol){\n\t\t\t\tconsole.log(`removed collection: ${oldCol}`);\n\t\t\t}else{\n\t            console.log(colId);\n\t            throw new Meteor.Error('remove-collection-error',`error removing collection: ${colId}`)\t\t\n\t\t\t};\n\t\t\treturn `removed collection: ${colId}`;\n\t\t\t\t// let print = Collections.remove(colId);\n\t\t\t\t// console.log(`deleted collection: ${colId}`);\n\t\t\t\t// return `deleted collection: ${colId}`;\n\t\t};\n\t}\n})\n\n// Define a rule to limit method calls\n// let runScanRule = {\n// \ttype: 'method',\n// \tname: 'moment.scan'\n// };\n// Add the rule, allowing up to 1 scan every 10 seconds\n// DDPRateLimiter.addRule(runScanRule, 1, 10000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\n\nimport { Collections } from './collections.js';\n\n\nMeteor.publish('collections.get', function(collectionId='') {\n\tcheck(collectionId,String);\n\tcollectionId = collectionId || {};\n  \t// console.log(Collections.find(collectionId).count());\n\treturn Collections.find(\n\t\tcollectionId, \n\t  { \n\t  \tsort: { created: -1 } \n\t}\n\t, {\n\t\tfields: Collections.publicFields\n\t});\n});\n\n// Define a rule to limit subscription calls\nvar subscribeToCollectionsRule = {\n  type: 'subscription',\n  name: 'collections.get'\n}\n// Add the rule, allowing up to 1 subscription every 5 seconds.\nDDPRateLimiter.addRule(subscribeToCollectionsRule, 1, 5000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport AWS from 'aws-sdk';\n\nimport { Collections } from '../collections/collections.js';\nimport { Prints } from './prints.js';\n\nAWS.config.region = 'us-east-1';\nvar rekognition = new AWS.Rekognition();\n\nMeteor.methods({\n\t\"print.save\"(newPrint){\n\t\tlet col = Collections.findOne(newPrint.collection);\n\t\tconsole.log(col);\n\t\tif(!col){\n\t\t\tthrow new Meteor.Error('no-collection','No collection found with given id!');\n\t\t};\n\t\tnewPrint.print_adder = this.userId || \"null\";\n\t\tnewPrint.print_collection = col.collection_id || \"people\";\n\t\tnewPrint.print_collection_id = col._id;\n\t\tnewPrint.print_name = newPrint.name.replace(/ /g,\"_\");\n\t\tnewPrint.print_img = newPrint.img;\n\t\t// console.log(newPrint);\n\t\tif(!newPrint){\n\t\t\tthrow new Meteor.Error('invalid-print','submitted print is invalid!');\n\t\t};\n\t\tPrints.simpleSchema().clean(newPrint);\n        // index a face into a collection\n        let faceParams = {\n          CollectionId: newPrint.print_collection,\n          ExternalImageId: newPrint.print_name,\n\t\t  Image: { \n\t\t\t\"Bytes\": new Buffer.from(newPrint.print_img.split(\",\")[1], \"base64\"),\n\t\t  },\n          DetectionAttributes: [\"ALL\"]\n        };\n        let faceRequest = rekognition.indexFaces(faceParams);\n        let promise = faceRequest.promise();\n        let indexFace = promise.then(result => {\n        \t// console.log(result);\n        \tnewPrint.print_id = result.FaceRecords[0].Face.FaceId;\n\t\t\tlet print = Prints.insert(newPrint);\n        \tconsole.log(`inserted: ${print}`);\n        \treturn result;\n        }).catch(error => {\n        \tthrow new Meteor.Error(error.code, error.message, error);\n        \treturn error;\n        });\n\t\treturn indexFace;\n\t},\n\n\t\"print.delete\"(printId){\n\t\tcheck(printId,String);\n\t\tif(printId){\n\t\t\tlet print = Prints.remove(printId);\n\t\t\tconsole.log(`deleted face: ${printId}`);\n\t\t\treturn `deleted face: ${printId}`;\n\t\t};\n\t},\n\n\t\"print.count\"(data){\n\t\t\tconsole.log(data);\n\t\t// return 55;\n\t\tlet colId =  data || \"\";\n\t\tcheck(colId,String);\n\t\tif(colId){\n\t\t\tlet printCount = Prints.find({print_collection_id: colId}).count();\n\t\t\tconsole.log(printCount);\n\t\t\treturn printCount;\n\t\t};\n\t},\n})\n\n// Define a rule to limit method calls\n// let runScanRule = {\n// \ttype: 'method',\n// \tname: 'print.save'\n// };\n// Add the rule, allowing up to 1 scan every 10 seconds\n// DDPRateLimiter.addRule(runScanRule, 1, 10000);","import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\n\n\nexport const Prints = new Meteor.Collection('prints');\n\n// Deny all client-side updates since we will be using methods to manage this collection\nPrints.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\nPrints.Schema = new SimpleSchema({\n  // Our schema rules will go here.\n  \"print_id\": {\n    type: String,\n    label: \"Print ID\",\n    optional: false,\n    defaultValue: \"AAAA-BBBB-CCCC-1111-2222-3333\",\n    index: true,\n    unique: true\n  },\n  \"print_name\": {\n    type: String,\n    label: \"Print Name\",\n    optional: false,\n    defaultValue: \"New Person\"\n  },\n  \"print_type\": {\n    type: String,\n    label: \"Print type\",\n    optional: false,\n    allowedValues: [\"face\", \"voice\", \"finger\"],\n    defaultValue: \"face\"\n  },\n  \"print_collection\": {\n    type: String,\n    label: \"Print collection\",\n    optional: false,\n    defaultValue: \"people\"\n  },\n  \"print_collection_id\": {\n    type: String,\n    label: \"Print collection ID\",\n    optional: false\n  },\n  \"print_img\": {\n    type: String,\n    label: \"Print img\",\n    optional: true,\n    defaultValue: \"/img/face-id-100.png\"\n  },\n  \"print_details\": {\n    type: Object,\n    label: \"Print details\",\n    optional: true,\n    blackbox: true\n  },\n  \"print_adder\": {\n    type: String,\n    label: \"User who added print\",\n    optional: false\n  },\n  \"created\": {\n    type: Date,\n    label: \"Date print added to Antennae\",\n    autoValue: function() {\n      if ( this.isInsert ) {\n        return new Date;\n      } \n    },\n    optional: true\n  },\n  \"updated\": {\n    type: Date,\n    label: \"Date print updated in System\",\n    autoValue: function() {\n      if ( this.isUpdate ) {\n        return new Date;\n      } \n    },\n    optional: true\n  }\n});\n\nPrints.attachSchema( Prints.Schema ); \n\n\nPrints.publicFields = {\n  print_id: 1,\n  print_name: 1,\n  print_type: 1,\n  print_collection: 1,\n  print_collection_id: 1,\n  print_img: 1,\n  print_details: 1,\n  print_adder: 1,\n  created: 1,\n  updated: 1\n};\n\n// Prints.helpers({\n//   // A collections is considered to be private if \"private\" is set to true\n//   isPrivate() {\n//     return this.private;\n//   }\n// });","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\n\nimport { Prints } from './prints.js';\n\n\nMeteor.publish('prints.get', function(collectionId) {\n\tcollectionId = collectionId || \"\";\n\tcheck(collectionId,String);\n\tlet selector = collectionId ? {print_collection_id: collectionId} : {};\n  \tconsole.log(selector);\n\treturn Prints.find(\n\t\tselector, \n\t  { \n\t  \tsort: { created: -1 } \n\t}\n\t, {\n\t\tfields: Prints.publicFields\n\t});\n});\n\n// Define a rule to limit subscription calls\nvar subscribeToPrintsRule = {\n  type: 'subscription',\n  name: 'prints.get'\n}\n// Add the rule, allowing up to 1 subscription every 5 seconds.\nDDPRateLimiter.addRule(subscribeToPrintsRule, 1, 5000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport AWS from 'aws-sdk';\n\nimport { Collections } from '../collections/collections.js';\nimport { Prints } from '../../api/prints/prints.js';\nimport { Searches } from './searches.js';\n\nAWS.config.region = 'us-east-1';\nvar rekognition = new AWS.Rekognition();\n\nMeteor.methods({\n\t\"search.face\"(picData,matchThreshold=98){\n\t\t//return 1;\n\t\t// if(!Meteor.user){\n\t\t// \tthrow new Meteor.Error('not-logged-in','must be logged-in to perform search');\n\t\t// \treturn false;\n\t\t// }\n\t\t// let matchThreshold = matchThreshold;\n\t\tcheck(matchThreshold, Number);\n\t\tconsole.log(\"ANALYZING IMAGE...\");\n\t\tvar t0 = new Date().getTime();\n\t\tlet imgBytes = new Buffer.from(picData.split(\",\")[1], \"base64\");\n\t\t// let colId = Meteor.user().profile.collections;\n\t\tlet colIds = Collections.find({collection_type: 'face'}, {fields: {collection_id: 1}}).fetch();\n\t\tconsole.log(colIds)\n\t\tlet moderationParams = {\n\t\t\t\"Image\": { \n\t\t\t\t\"Bytes\": imgBytes,\n\t\t\t},\n\t\t\t\"MinConfidence\": 50,\n\t\t};\n\t\tlet labelParams = {\n\t\t\t\"Image\": { \n\t\t\t\t\"Bytes\": imgBytes,\n\t\t\t},\n\t\t\t\"MaxLabels\": 20,\n\t\t\t\"MinConfidence\": 75,\n\t\t};\n\t\tlet faceParams = {\n\t\t\t\"Image\": { \n\t\t\t\t\"Bytes\": imgBytes,\n\t\t\t},\n  \t\t\t\"Attributes\": [\"ALL\"],\n\t\t};\n\t\tlet celebrityParams = {\n\t\t\t\"Image\": { \n\t\t\t\t\"Bytes\": imgBytes,\n\t\t\t},\n\t\t};\n\t\t// create request objects\n\t\tlet moderationRequest = rekognition.detectModerationLabels(moderationParams);\n\t\tlet labelRequest = rekognition.detectLabels(labelParams);\n\t\tlet faceRequest = rekognition.detectFaces(faceParams);\n\t\tlet celebrityRequest = rekognition.recognizeCelebrities(celebrityParams);\n\t\t// create promises\n\t\tlet allPromises = [];\n\t\tallPromises.push(moderationRequest.promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }));\n\t\tallPromises.push(labelRequest.promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }));\n\t\tallPromises.push(faceRequest.promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }));\n\t\tallPromises.push(celebrityRequest.promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }));\n\t\t_.each(colIds, (colId) => {\n\t\t\tlet rekognitionParams = {\n\t\t\t\t\"CollectionId\": colId.collection_id,\n\t\t\t\t\"FaceMatchThreshold\": matchThreshold,\n\t\t\t\t\"MaxFaces\": 2,\n\t\t\t\t\"Image\": { \n\t\t\t\t\t\"Bytes\": imgBytes,\n\t\t\t\t},\n\t\t\t};\n\t\t\tconsole.log(rekognitionParams);\n\t\t\tlet rekognitionRequest = rekognition.searchFacesByImage(rekognitionParams);\n\t\t\tallPromises.push(rekognitionRequest.promise().catch(error => { throw new Meteor.Error(error.code, error.message, error); return error; }));\n\t\t\tconsole.log(colId.collection_id);\n\t\t});// rekognitionRequest.promise();\n\t\t// Fulfill promises in parallel\n\t\tlet response = Promise.all(\n\t\t\tallPromises\n\t\t).then(values => {\n\t\t\tconsole.log(JSON.stringify(values));\n\t\t\tconsole.log(values[0]);\n\t\t\tconsole.log(values[1]);\n\t\t\tconsole.log(values[2]);\n\t\t\tconsole.log(values[3]);\n\t\t\t//console.log(values[4]);\n\t\t\tlet i = 4;\n\t\t\tlet persons = [];\n\t\t\twhile(values[i]){\n\t\t\t\tconsole.log(values[i]);\n\t\t\t\tif (values[i].FaceMatches[0]){\n\t\t\t\t\tlet tag = {\n\t\t\t\t\t\tcollection: Prints.findOne({print_id: values[i].FaceMatches[0].Face.FaceId}, {fields: {print_collection: 1}}),\n\t\t\t\t\t\timage_id: values[i].FaceMatches[0].Face.ExternalImageId,\n\t\t\t\t\t\tface_id: values[i].FaceMatches[0].Face.FaceId,\n\t\t\t\t\t\tsimilarity: values[i].FaceMatches[0].Similarity,\n\t\t\t\t\t};\n\t\t\t\t\tpersons.push(tag);\n\t\t\t\t\tconsole.log(tag);\n\t\t\t\t};\n\t\t\t\ti++;\n\t\t\t};\n\t\t\tlet t1 = new Date().getTime();\n\t\t\tconsole.log(`Response took ${t1 - t0} ms`);\n\t\t\tlet search_results = {\n\t\t\t\t\tmoderation: values[0].ModerationLabels,\n\t\t\t\t\tlabels: values[1].Labels,\n\t\t\t\t\tfaceDetails: values[2].FaceDetails,\n\t\t\t\t\tcelebrity: values[3].CelebrityFaces,\n\t\t\t\t\tpersons: persons, //.FaceMatches[0],\n\t\t\t};\n\t\t\tlet search = {\n\t\t\t\t\t// search_image: picData,\n\t\t\t\t\tsearch_results: search_results\n\t\t\t};\n\t\t\tlet saveSearch = Searches.insert(search);\n\t\t\tconsole.log(saveSearch);\n\t\t\treturn search_results;\n\t\t}).catch(error => {\n\t\t\tconsole.log('caught error!');\n\t\t\tconsole.log(error);\n\t\t\tthrow new Meteor.Error(error.error, error.reason, error.details);\n\t\t}).finally(() => {\n\t\t\tconsole.log('finally');\n\t\t\tconsole.log(this);\n\t\t});\n\t\tconsole.log(response);\n\t\tlet t1 = new Date().getTime();\n\t\tconsole.log(`Request took ${t1 - t0} ms`);\n\t\treturn response;\n\t},\n\n\t\"search.delete\"(searchId){\n\t\tcheck(searchId,String);\n\t\tif(searchId){\n\t\t\tlet search = Searches.remove(searchId);\n\t\t\tconsole.log(`deleted search: ${searchId}`);\n\t\t\treturn `deleted search: ${searchId}`;\n\t\t};\n\t}\n})\n\n// Define a rule to limit method calls\nlet runScanRule = {\n\ttype: 'method',\n\tname: 'moment.scan'\n};\n// Add the rule, allowing up to 1 scan every 10 seconds\nDDPRateLimiter.addRule(runScanRule, 1, 10000);","import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\n\nimport { Searches } from './searches.js';\n\n\nMeteor.publish('searches.get', function(searchId='') {\n\tcheck(searchId,String);\n\tsearchId = searchId || {};\n  \t// console.log(Searches.find(searchId).count());\n\treturn Searches.find(\n\t\tsearchId, \n\t  { \n\t  \tsort: { created: -1 } \n\t}\n\t, {\n\t\tfields: Searches.publicFields\n\t});\n});\n\n// Define a rule to limit subscription calls\nvar subscribeToSearchesRule = {\n  type: 'subscription',\n  name: 'searches.get'\n}\n// Add the rule, allowing up to 1 subscription every 5 seconds.\nDDPRateLimiter.addRule(subscribeToSearchesRule, 1, 5000);","import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\n\n\nexport const Searches = new Meteor.Collection('searches');\n\n// Deny all client-side updates since we will be using methods to manage this collection\nSearches.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\nSearches.Schema = new SimpleSchema({\n  // schema rules\n  \"search_type\": {\n    type: [String],\n    label: \"Search types\",\n    optional: false,\n    allowedValues: [\"moderation\", \"label\", \"face\", \"collection\"],\n    defaultValue: [\"moderation\", \"label\", \"face\"]\n  },\n  \"search_collections\": {\n    type: [String],\n    label: \"Collections to search\",\n    optional: true,\n    defaultValue: [\"\"]\n  },\n  \"search_image\": {\n    type: String,\n    label: \"Image to search\",\n    optional: true,\n    defaultValue: \"/img/face-id-100.png\"\n  },\n  \"search_results\": {\n    type: Object,\n    label: \"Object of search types\",\n    optional: true,\n    blackbox: true,\n    defaultValue: {}\n  },\n  \"faces\": {\n    type: [Object],\n    label: \"Face objects found in image\",\n    optional: true,\n    blackbox: true,\n    defaultValue: []\n  },\n  \"created\": {\n    type: Date,\n    label: \"Date search performed\",\n    autoValue: function() {\n      if ( this.isInsert ) {\n        return new Date;\n      } \n    },\n    optional: true,\n    //index: true\n  },\n  \"updated\": {\n    type: Date,\n    label: \"Date search updated\",\n    autoValue: function() {\n      if ( this.isUpdate ) {\n        return new Date;\n      } \n    },\n    optional: true\n  }\n});\n\nSearches.attachSchema( Searches.Schema );\n\nif(Meteor.isServer){\n  Meteor.startup(() => {\n    Searches._ensureIndex({\n        created: -1,\n    });\n    // Searches._ensureIndex({ search_image: 1});\n  });\n}\n\nSearches.publicFields = {\n  search_id: 1,\n  search_type: 1,\n  search_collections: 1,\n  search_image: 1,\n  search_results: 1,\n  created: 1,\n  updated: 1\n};\n\n// Searches.helpers({\n//   // A collections is considered to be private if \"private\" is set to true\n//   isPrivate() {\n//     return this.private;\n//   }\n// });","import { Meteor } from 'meteor/meteor';\nimport { Collections } from '../../api/collections/collections.js';\nimport { Prints } from '../../api/prints/prints.js';\nimport { Searches } from '../../api/searches/searches.js';\nimport AWS from 'aws-sdk';\n\nAWS.config.region = 'us-east-1';\nvar rekognition = new AWS.Rekognition();\n\n// if the database is empty on server start, create some sample data.\n\nMeteor.startup(() => {\n\n  console.log(\"getting aws collections...\");\n  let colParams= {};\n  let colRequest = rekognition.listCollections(colParams);\n  let promise = colRequest.promise();\n  let cols = promise.then(result => {\n    console.log(result);\n    if(result && result.CollectionIds.length > 0){\n      _.each(result.CollectionIds, function(colId){\n        let awsCol = {\n          collection_id: colId,\n          collection_name: colId,\n          collection_type: \"face\",\n          private: true\n        };\n        let existingCol = Collections.upsert({collection_id: colId}, {$set: awsCol});\n        console.log(`upserted collection: ${JSON.stringify(existingCol)}`);\n        // Now try getting existing faces for each collection\n        let faceParams = {\n          CollectionId: colId\n        };\n        let faceRequest = rekognition.listFaces(faceParams);\n        let promise = faceRequest.promise();\n        let faces = promise.then(result => {\n          if(result && result.Faces.length > 0){\n            console.log(`${colId} collection has ${result.Faces.length} faces`);\n            _.each(result.Faces, function(face){\n              let awsFace = {\n                print_id: face.FaceId,\n                print_name: face.ExternalImageId || face.ImageId,\n                print_type: \"face\",\n                print_collection: colId,\n                print_collection_id: Collections.findOne({collection_id: colId})._id,\n                print_details: face,\n                print_adder: \"root\"\n              };\n              Prints.simpleSchema().clean(awsFace);\n              let existingFace = Prints.upsert({print_id: face.FaceId}, {$set: awsFace});\n              console.log(existingFace);\n            })\n          }\n        });\n      });\n    }\n    return result;\n  });\n\n  // if (Prints.find().count() < 15) {\n  //   console.log(\"seeding prints...\");\n  //   let seedPrints = []\n  //   _.times(5, ()=>{\n  //     let print = {\n  //       print_adder: this.userId || \"root\",\n  //       print_collection: \"people\",\n  //       print_collection_id: \"people\",\n  //       print_name: faker.helpers.userCard().name,\n  //       print_id: faker.random.uuid(),\n  //       print_img: faker.image.avatar()\n  //     };\n  //     let printId = Prints.insert(print);\n  //     seedPrints.push(printId);\n  //   });\n  //   console.log(seedPrints);\n\n  // };\n});","/*\n * Copyright 2017-present Antmounds.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the GNU Affero General Public License, version 3.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     https://www.gnu.org/licenses/agpl-3.0.en.html\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport '../accounts-config.js';\nimport './fixtures.js';\n// This defines all the collections, publications and methods that the application provides\n// as an API to the client.\nimport './register-api.js';\n\nconst os = require('os');\n\n\nserver_mode = Meteor.isProduction ? \"PRODUCTION\" : \"DEVELOPMENT\";\nconsole.log('index.js: ' + server_mode + \"-->\" + JSON.stringify(Meteor.settings));\n\nMeteor.methods({\n\n\tinfo(){\n\t\treturn `version: 0.9.1 - build: ${process.env.BUILD || 'dev'} - hostname: ${os.hostname()}`;\n\t},\n\n\tasync getData(){    \n\t\ttry{\n\t\t\tvar response = {};\n\t\t\tconst results = await HTTP.call('GET', 'http://jsonplaceholder.typicode.com/posts');\t\n\t\t\tconsole.log(JSON.stringify(results.data[0]));\t\n\t\t\tconsole.log(JSON.stringify(results.headers));\n\t\t\tresponse.code = true;\t\t\n\t\t\tresponse.data = results;\t\n\t\t} catch(e){\n\t\t\tresponse = false;\n\t\t\tconsole.log(e);\n\t\t} finally {\n\t\t\tconsole.log(\"finally...\")\n\t\t\t//throw new Meteor.Error(\"inappropriate-pic\",\"The user has taken an inappropriate picture.\");\t\n\t\t\treturn response;\n\t\t}\n\t}\n\n});\n\nMeteor.onConnection((connection)=>{\n\tlet clientAddr = connection.clientAddress;\n\tlet headers = connection.httpHeaders;\n\tconsole.log(`connection from ${clientAddr}`);\n\t// console.log(headers);\n})","import '../../api/collections/methods.js';\nimport '../../api/collections/publications.js';\nimport '../../api/searches/methods.js';\nimport '../../api/searches/publications.js';\nimport '../../api/prints/methods.js';\nimport '../../api/prints/publications.js';","import { Accounts } from 'meteor/accounts-base';\nimport { AccountsCommon } from 'meteor/accounts-base'\nimport { AccountsClient } from 'meteor/accounts-base'\n\n\nif (Meteor.isClient) {\n\tAccounts.ui.config({\n\t  passwordSignupFields: 'USERNAME_AND_EMAIL',\n\t});\n}\n\nif (Meteor.isServer) {\n\tconsole.log(\"accounts config loaded!\");\n\tAccounts.onCreateUser((options, user) => {\n\t\t// user.created = new Date();\n\n\t\tconsole.log(\"user: \" + user);\n\t\tconsole.log(\"options: \" + options);\n\t\t// user = JSON.stringify(user);\n\t\tconsole.log(user);\n\t\t// options = JSON.stringify(options);\n\t\tconsole.log(options);\n\n\t    // Don't forget to return the new user object at the end!\n\t\treturn user;\n\t});\n}","/*\n * Copyright 2017-present Antmounds.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the GNU Affero General Public License, version 3.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     https://www.gnu.org/licenses/agpl-3.0.en.html\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport '../imports/startup/server';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}